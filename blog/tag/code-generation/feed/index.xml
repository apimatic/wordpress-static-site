
<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Code Generation Archives - APIMatic</title>
	<atom:link href="/blog/tag/code-generation/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>APIMatic is an API documentation tool that provides a complete set of DX components such as autogenerated SDKs, API portal, API docs, live code samples, and more.</description>
	<lastBuildDate>Tue, 21 Dec 2021 08:31:14 +0000</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>

<image>
	<url>/wp-content/uploads/2021/10/cropped-cropped-apimaticio-favicon-1-32x32.png</url>
	<title>Code Generation Archives - APIMatic</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>The Great SDK Battle: Build vs Buy</title>
		<link>/blog/the-great-sdk-battle-build-vs-buy/</link>
					<comments>/blog/the-great-sdk-battle-build-vs-buy/#respond</comments>
		
		<dc:creator><![CDATA[Mehdi Raza Jaffery]]></dc:creator>
		<pubDate>Wed, 08 Sep 2021 08:10:28 +0000</pubDate>
				<category><![CDATA[APIMATIC]]></category>
		<category><![CDATA[CodeGen]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[auto-generated SDKs]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Sdks]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1407</guid>

					<description><![CDATA[<p>In this API-driven era, offering just an API won’t cut it anymore. The APIs need proper documentation, helping code samples, and SDKs to ensure that the end-user quickly gets to the first Hello World. While an SDK is a “make-it-or-break-it” deal for your API, it is just as difficult to get it right. Engineering the [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/the-great-sdk-battle-build-vs-buy/">The Great SDK Battle: Build vs Buy</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="1407" class="elementor elementor-1407" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-1ed8f23b elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="1ed8f23b" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-694f00b6" data-id="694f00b6" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-4dcf0310 elementor-widget elementor-widget-text-editor" data-id="4dcf0310" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
			<style>/*! elementor - v3.5.6 - 28-02-2022 */
.elementor-widget-text-editor.elementor-drop-cap-view-stacked .elementor-drop-cap{background-color:#818a91;color:#fff}.elementor-widget-text-editor.elementor-drop-cap-view-framed .elementor-drop-cap{color:#818a91;border:3px solid;background-color:transparent}.elementor-widget-text-editor:not(.elementor-drop-cap-view-default) .elementor-drop-cap{margin-top:8px}.elementor-widget-text-editor:not(.elementor-drop-cap-view-default) .elementor-drop-cap-letter{width:1em;height:1em}.elementor-widget-text-editor .elementor-drop-cap{float:left;text-align:center;line-height:1;font-size:50px}.elementor-widget-text-editor .elementor-drop-cap-letter{display:inline-block}</style>				<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class=""><img class="wp-image-1431 aligncenter" src="/wp-content/uploads/2021/12/build-vs-buy-1024x367.png" alt="SDKs: Build vs Buy" width="700" height="251"></p>
<p class=""><span style="font-weight: 400;">In this API-driven era, offering just an API won’t cut it anymore. The APIs need proper documentation, helping code samples, and SDKs to ensure that the end-user quickly gets to the first </span><i><span style="font-weight: 400;">Hello World</span></i><span style="font-weight: 400;">. While an SDK is a “make-it-or-break-it” deal for your API, it is just as difficult to get it right. Engineering the SDK is only the first step of this cycle. Once your SDK is published, it needs to be maintained consistently with each bug fix, feature, or new API version.</span></p>
<p class=""><em><span style="font-weight: 400;">This blog is the first part of a series on what goes behind SDK creation and maintenance.&nbsp;</span></em></p>

<h2 class=""><b>What to Look Out For While Creating SDKs?</b></h2>
<p class=""><span style="font-weight: 400;">From an engineering perspective, each phase of building an SDK is crucial and comes with its own set of challenges. In time-critical situations, you may overlook some issues that can impact your SDK’s usability and maintainability in the long run. Hence, while creating SDKs, you need to address these issues for </span><b>each API, in each language</b><span style="font-weight: 400;">:</span></p>

<h3 class=""><b>&nbsp;Step 1: Designing an SDK</b></h3>
<ul class="">
 	<li style="font-weight: 400;" aria-level="1"><b>Structure: <span style="font-weight: 400;">Need to design SDKs for the user, for future extensibility.</span></b></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Language versions:</b><span style="font-weight: 400;"> What min/max versions to support? What are the version-specific issues and your upgrade policy?</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Dependencies: <span style="font-weight: 400;">This includes fixes, workarounds, limitations, quality, upgrade policy, language support.</span></b></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Guidelines: <span style="font-weight: 400;">The design, linting, and static analysis guidelines to apply throughout the codebase.</span></b></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">

<hr>

</div>
</div>
<h3 class=""><b>Step 2: Implementing the SDK</b></h3>
<ul class="">
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Translate schema to concrete types</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Implementing API calls</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Wrap HTTP implementation in an HTTP layer as HTTP clients come and go, so you may consider a middleware arch</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Handle cancellation of API calls</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Handle API/transient errors and recover gracefully</span><span style="font-weight: 400;">&nbsp;(timeout, retries)</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Handle concurrency via thread-safe calls or chaining</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Handle response caching</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Handle API throttling</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Create interfaces for extension</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Log important events (integrate into system logging)</span></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">

<hr>

</div>
</div>
<h3 class=""><b>Step 3: Testing the SDK</b></h3>
<ul class="">
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Testing all parts of the SDK code</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Cross-platform/version testing against different language versions, OSes</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Integration tests (end-to-end testing of SDKs)</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Testing your code generator (if you&#8217;re using one)</span></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">

<hr>

</div>
</div>
<h3><b>Step 4: Writing SDK Reference</b></h3>
<ul class="">
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Writing getting started guides</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Writing usage examples for every endpoint</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Creating a reference website for the SDK user</span></li>
 	<li aria-level="1"><span style="font-weight: 400;">Creating sample applications (in addition to the code samples per endpoint) to get started quickly</span></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">

<hr>

</div>
</div>
<h3 class=""><b>Step 5: Packaging/Publishing the SDKs</b></h3>
<ul class="">
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Publishing packages on package repositories</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Recreating bugs reports</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Handling customer issues and feedback related to SDK on GitHub or other forums</span></li>
</ul>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">

<hr>

</div>
</div>
<p class=""><span style="font-weight: 400;">The engineering effort required to maintain the SDK program explodes with the number of supported languages, as all the steps mentioned above for creating <b>one</b> SDK will need to be done for <b>each API and each language, every time</b>. Careful planning can reduce some of this cost, but the perpetual maintenance cost will still exist.</span></p>
<p class=""><img class="aligncenter wp-image-1426 " src="/wp-content/uploads/2021/12/SDK-1024x676.png" alt="SDK Maintenance" width="381" height="252"></p>

<h2 class=""><b>Why Do SDKs Need Maintenance?</b></h2>
<p class=""><span style="font-weight: 400;">Once you’ve successfully implemented and published your SDK, the endless cycle of maintenance begins. Maintenance is required from an engineering as well as a business perspective, hence making the cost of maintenance much higher than the development cost, as again, this applies to the SDKs of <strong>each language per API</strong>.</span></p>

<h3 class=""><b>Maintenance From Engineering Perspective</b></h3>
<p class=""><span style="font-weight: 400;">If you think creating an SDK is enough, updating it is much more resource and time-intensive. Technology and APIs are continuously evolving, and SDKs need to keep up with them. You will need to update your SDKs (on time!) for the following reasons:</span></p>

<ol class="">
 	<li style="font-weight: 400;" aria-level="1"><b>Updates to the API</b><span style="font-weight: 400;">: With every update to the API, the SDKs need to be updated for all languages simultaneously or the SDKs will lag behind the API updates.</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>New language or framework versions: </b><span style="font-weight: 400;">This occurs more often than you realize and is a major operational burden.</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Language ecosystem evolution:</b><span style="font-weight: 400;"> New IDEs, new build tools, major fragmentation in the ecosystem requires constant maintenance.</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>New dependency versions</b><span style="font-weight: 400;">: This results in more fixes, updates, security fixes, development of supported features.</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Bug fixes in the SDK:</b><span style="font-weight: 400;"> You need to test and fix bugs continuously to ensure no blockers occur at the user’s end, negatively impacting your API’s experience.</span></li>
</ol>
<h3 class=""><b>Maintenance From Business POV</b></h3>
<p class=""><span style="font-weight: 400;">Apart from the high maintenance required by your SDKs to tackle engineering concerns, you also need to consider business-oriented issues that may affect your SDK delivery and performance:&nbsp;&nbsp;</span></p>

<ol class="">
 	<li style="font-weight: 400;" aria-level="1"><b>Lock-in on internal SDK team: </b><span style="font-weight: 400;">A custom internal tool or process that requires maintenance and a lot of engineering time/resources.</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Speed of update:</b><span style="font-weight: 400;"> SDKs and documentation lagging behind API releases unless you write a general-purpose code generator.</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Opportunity cost:</b><span style="font-weight: 400;"> Can other areas in your API program use this engineering time?</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Time-to-market:</b><span style="font-weight: 400;"> If you&#8217;re just starting with building SDKs, when will they be available and what do you do in the meantime?</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Operational burden:</b><span style="font-weight: 400;"> Reduces developer velocity and happiness over time due to fighting fires, adds project risk to API program, increases costs for the organization.</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Operational excellence:</b><span style="font-weight: 400;"> Can you achieve the same level of quality and attention to detail compared to a company that exists only for creating SDKs?</span></li>
 	<li style="font-weight: 400;" aria-level="1"><b>Keeping the SDK program running:</b><span style="font-weight: 400;"> Maintaining SDKs takes time and energy. Building it isn’t where most of the expense lies. Instead, that comes with running and maintaining complicated processes and tools behind the SDK program.</span></li>
</ol>
<div class="row bg-editor-hr-wrap">
<div class="col-md-12 col-xs-12 col-sm-12">

<hr>

</div>
</div>
<p class=""><span style="font-weight: 400;">According to </span><a href="https://www.bls.gov/ooh/computer-and-information-technology/software-developers.htm"><span style="font-weight: 400;">bls.gov</span></a><span style="font-weight: 400;">, the median salaries in 2020 were as follows:</span></p>

<ul class="">
 	<li><span style="font-weight: 400;">Developer: $110,140 per year</span></li>
 	<li><span style="font-weight: 400;">Tester: $110,140 per year</span></li>
 	<li><span style="font-weight: 400;">Technical Writer: $74,650 per</span></li>
</ul>
<p class=""><span style="font-weight: 400;">To make things simple, let’s assume that building a <strong>single SDK for 1 API in just one language</strong> (including research, documentation, and testing) takes 4 weeks to build. This makes the upfront cost around $22,687. Now add in the maintenance time to 2-3 days per month, and SDK maintenance can go up to $29,089, bringing the total to $51,776. Hence, building and maintaining <strong>a single SDK</strong> in a fairytale situation, without any hiccups, can cost around $52,000.</span></p>
<p class=""><span style="font-weight: 400;">Now imagine if you&#8217;re building SDKs for 8 languages for 10 APIs, this will skyrocket this figure to almost $4M.&nbsp;</span></p>


<figure id="attachment_1434" aria-describedby="caption-attachment-1434" style="width: 601px" class="wp-caption aligncenter"><img class="wp-image-1434 " src="/wp-content/uploads/2021/12/TotalCost-01-2-1024x576.png" alt="Total Cost to Build 1 SDK in 1 Language" width="601" height="338"><figcaption id="caption-attachment-1434" class="wp-caption-text">Total Cost to Build 1 SDK in 1 Language per API</figcaption></figure>
<h2 class=""><b>APIMatic as a Code Generator</b></h2>
<p class=""><span style="font-weight: 400;">You can choose to address all of the aforementioned issues yourself and write the SDK code by hand, or even try to solve your problems using an in-house code generator, but the process itself is quite hard and can take up to years to streamline. Not to forget the time and resource overhead involved. However, </span><a href="https://apimatic.io/"><span style="font-weight: 400;">APIMatic</span></a> <span style="font-weight: 400;">can handle these issues automatically at the back-end for you, while you focus on building new solutions. APIMatic’s flagship code generator creates SDKs for multiple languages, including:</span></p>

<ul class="">
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">PHP&nbsp;</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Ruby</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Python</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">C# (.NET)</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Java</span></li>
 	<li aria-level="1">Typescript (coming soon)</li>
</ul>
<p class=""><span style="font-weight: 400;">These SDKs are featured packed with thread-safe configurations, retries, logging, and more. The SDKs accurately map your API definition files into helper classes, model classes, exception classes, and controllers. APIMatic also creates comprehensive, language-specific guides with the SDKs that contain tailored tutorials based on your language and popular IDEs to help users easily get started with the SDK in their applications. For more detail, read here on </span><a href="https://docs.apimatic.io/generate-sdks/overview-sdks/"><span style="font-weight: 400;">APIMatic SDKs</span></a>.</p>
<p class=""><span style="font-weight: 400;">APIMatic creates SDKs from </span><b>OpenAPI 2.0 and 3.0, API Blueprint</b><span style="font-weight: 400;">, </span><b>RAML</b><span style="font-weight: 400;"> as well as several other popular </span><a href="https://www.apimatic.io/transformer/"><span style="font-weight: 400;">API specification formats</span></a><span style="font-weight: 400;">.</span></p>

<h3 class=""><b>Reduce Time to Market</b></h3>
<p class=""><span style="font-weight: 400;">Internal SDK programs can become costly to maintain over time due to churn (new API versions, language features, and library versions or API program engineering turnover). If you are forking open-source code generators, it means you will be maintaining all the custom templates and syncing your project with the upstream for fixes/bugs perpetually. Also, there is no customer support.</span></p>
<p class=""><span style="font-weight: 400;">APIMatic significantly cuts down on costs and time for creating and maintaining SDKs in any language. You only bring in your API specification file and roll out your updated</span><span style="font-weight: 400;"> SDKs in minutes, rather than weeks, months, or years.&nbsp;</span></p>

<h3 class="">Automate SDK Generation and Maintenance</h3>
<p class="">APIMatic offers programmatic access to their flagship Code Generator, which allows integrating the autogeneration of SDKs directly into your CI/CD pipelines. So every time the API is updated, the corresponding updated SDKs are automatically generated, without any manual interference. Learn more about how APIMatic offers <a href="https://www.apimatic.io/continuous-code-generation">CodeGen-as-a-Service</a>.</p>

<h3 class=""><b>Ensure Robustness with Battle-Tested SDKs</b></h3>
<p class=""><span style="font-weight: 400;">SDKs generated by APIMatic are already deployed by large companies and installed several million times, meaning that the SDKs are reviewed by a larger user base that helps us design better SDKs.</span></p>

<h2 class=""><strong>To Sum It Up</strong></h2>
<p class=""><span style="font-weight: 400;">Creating SDKs in multiple languages is quite resource-intensive and expensive. Apart from just development, a major chunk of time and resources is spent on maintaining the SDKs, both from an engineering and business point of view, for all languages for each API. APIMatic is a developer experience platform that takes care of all the SDK generation and maintenance work behind the scenes while your developers can focus on their applications and innovative solutions. See firsthand how APIMatic can help <a href="https://www.apimatic.io/account/register">enhance your developer experience</a>.</span></p>
<p class="">&nbsp;</p>

</div>
</div>
</div>
</div>						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/the-great-sdk-battle-build-vs-buy/">The Great SDK Battle: Build vs Buy</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/the-great-sdk-battle-build-vs-buy/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Behind the Scenes of SDK Generation</title>
		<link>/blog/behind-the-scenes-of-sdk-generation/</link>
					<comments>/blog/behind-the-scenes-of-sdk-generation/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Mon, 17 Jul 2017 11:02:53 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Sdk]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=535</guid>

					<description><![CDATA[<p>Automated SDK generation is a tricky challenge; on one hand, you want to keep SDKs lean with minimal code and dependencies and on the other hand, you want to allow API providers to customize the generated code according to the needs of their developers such that SDKs can be more than mere language wrappers of [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/behind-the-scenes-of-sdk-generation/">Behind the Scenes of SDK Generation</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="535" class="elementor elementor-535" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-77137095 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="77137095" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-41d1c8b1" data-id="41d1c8b1" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-66e942b5 elementor-widget elementor-widget-text-editor" data-id="66e942b5" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="bf09" class="">Automated SDK generation is a tricky challenge; on one hand, you want to keep SDKs lean with minimal code and dependencies and on the other hand, you want to allow API providers to customize the generated code according to the needs of their developers such that SDKs can be more than mere language wrappers of an API.</p>
<p id="2a7a" class="">In this post, we will share how our code generation engine works and how we have managed to allow code customizations without letting API providers be bogged down in manual efforts.</p>
<p id="1dcc" class="">APIMatic’s Code Generation Engine follows a number of steps to generate client libraries from API description files. The code generation process starts with an input API description file. This file can be in any of the multiple API description formats we support like OpenAPI, RAML, or API Blueprint, etc.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<figure id="attachment_536" aria-describedby="caption-attachment-536" style="width: 1024px" class="wp-caption aligncenter"><img class="wp-image-536" src="/wp-content/uploads/2021/12/1_yD9ALr6xQvOo3aD0Rg6GXg-1024x630.jpg" alt="SDK Generation in APIMatic" width="1024" height="630"><figcaption id="caption-attachment-536" class="wp-caption-text">SDK Generation in APIMatic</figcaption></figure>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="fa73" class="">Step 1: Transformation</h2>
<p id="7332" class="">The first step is the conversion or transformation of the input API description file into our own representation format, internally known as Standard Description Language (SDL). This is the same format that is publicly referred to as the APIMatic format. Transformation is only done if the API description is not already in the APIMatic format and you’re generating from the API or importing your API description into our API description editor. The APIMatic format has evolved over time to capture information that is useful for SDK generation but is otherwise missing in API description formats. It also serves as a superset of API description features over other formats.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-537 aligncenter" src="/wp-content/uploads/2021/12/1_ROXRhk6N9lL3dsOH23pdHg.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="31c9">Step 2: Validation (and correction)</h2>
<p id="7553" class="">After an input file is transformed into APIMatic’s format, it is then validated. Validation is quite a thorough process comprising of a large number of sub-steps. It starts with the validation of basic API settings, server configurations, and code generation settings. Authentication settings are validated after that, followed by validation of models, errors, and endpoints.</p>
<p id="72c7" class="">Our API validator aids the user by automatically rectifying small issues like duplicate property names and throws warnings to reflect any changes made. Bigger issues (for example, invalid test case input) result in errors which the user needs to fix in their API description.</p>
<h2 id="0ee5" class="">Step 3: SDK Generation</h2>
<p id="9114" class="">Following the validation and correction of an API description is the code generation step. Different parts of the API description are looped over and code representations are generated. Some important entity conversions from an API description to an SDK are:</p>
<ul class="">
<li>Settings -&gt; Configuration files</li>
<li>Endpoints -&gt; Functions</li>
<li>Groups -&gt; Controller class files</li>
<li>Models -&gt; Model class files</li>
<li>Errors -&gt; Exception class files</li>
</ul>
<p id="63bc" class="">Along with these core files, an HTTP abstraction layer is generated to wrap the HTTP client is used by the SDK so as to facilitate the user in case he decides to use a different client. One or more helper class files are generated which abstract out a lot of the common code from the SDK and a client library interface is provided to wrap the SDK and make it easier to use. Some language or platform-dependent files are generated as well, for example, gemspec, Gemfile, and Rakefile are generated for Ruby SDKs. These files specify SDK dependencies, test commands and other information required to publish the SDK on hosting services like <a href="https://rubygems.org/">RubyGems</a>.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:list /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-538 aligncenter" src="/wp-content/uploads/2021/12/1_XJabqxinV89cO0mc5zJZkg.png" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="0e86">Step 4: Documentation Generation</h2>
<p id="0a15" class="">Every generated SDK includes a README.md file. Depending on the user’s pricing plan, this README file might contain a very basic getting started guide or it may contain detailed and comprehensive documentation for the entire SDK. In the latter case, dynamic screenshots specific to the user’s API are generated and uploaded to our servers. These screenshots walk a developer through getting started with the SDK and are linked in the markdown README file. The README also contains a complete class reference and code samples for the SDK and creates a delightful developer experience when rendered.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-539 aligncenter" src="/wp-content/uploads/2021/12/1_S9XduLf-793bPeaPHp4ruQ.png" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="ebbe">Step 5: Packaging</h2>
<p id="237f" class="">After all the SDK files have been generated, there are multiple packaging options available to APIMatic users. You can either get the SDK packaged in a zip file or have it deployed to Github.</p>
<p id="8f70" class="">The output of the process may be a zipped SDK available for download, a new branch on the user’s Github repository or, our latest offering, a complete&nbsp;<a href="https://www.apimatic.io/developer-experience-portal/">Developerless API Portal</a>.</p>
<h2 id="b3b6" class="">SDKs, not mere wrappers</h2>
<p id="4013" class="">The SDKs generated by our code generation engine come with utility classes, authentication helpers, and configuration files to aid usage. They provide strict language bindings so developers never have to deal with HTTP or JSON, but instead communicate with the API using language objects and functions. They are also built around &nbsp;SOLID&nbsp;&nbsp;software design principles to allow easy extension in functionality.</p>
<p id="c817" class="">We allow API providers to customize code generation using simple code generation settings. From generic code styling settings like class naming to advance code customization settings like asynchronous or synchronous code generation and advanced documentation generation; we have a lot to offer.</p>
<h2 id="107e">Is automatic SDK generation for you?</h2>
<p id="19b8" class="">SDKs help API providers increase API adoption by enabling developers from different platforms or languages to get started with their API quickly. With instant SDK generation times and cheap costs, code generation engines might be the obvious way to go if you need SDKs for your APIs.</p>
<p id="eb3a" class="">In spite of all the benefits of generating SDKs using a code generation engine, there are certain scenarios where it might be wiser to write SDKs manually. One example is when you are planning to put some specific business logic like complex cryptographic logic&nbsp;in your SDKs to simplify API design or to exploit client-side processing to maximize API scalability. We counter this to some extent by providing HTTP abstraction and&nbsp;<em>before&nbsp;</em>and&nbsp;<em>after&nbsp;</em>request hooks in SDK code to allow wrappers to be written over generated code. Still, it is up to the API provider to decide if that is enough for their specific use case.</p>
<p id="f803" class="">It is important to delineate your requirements before deciding how you will provide SDKs to developers using your API. Our team is always available for discussion; don’t hesitate <a href="mailto:sales@apimatic.io">getting in touch</a> if you’re still unsure about code generation being the right fit for you.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/behind-the-scenes-of-sdk-generation/">Behind the Scenes of SDK Generation</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/behind-the-scenes-of-sdk-generation/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Introducing APIMatic CLI</title>
		<link>/blog/introducing-apimatic-cli/</link>
					<comments>/blog/introducing-apimatic-cli/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Tue, 25 Apr 2017 11:02:53 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Apimatic]]></category>
		<category><![CDATA[Apimatic Features]]></category>
		<category><![CDATA[Cli]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Github]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=518</guid>

					<description><![CDATA[<p>A large number of our users describe their APIs using our API editor and generate SDKs from our website. But there is an equally large niche of our users who prefer using our&#160;CodeGen API&#160;to generate SDKs or our&#160;Transformer API&#160;to transform their API descriptions. We set out with the goal of making the lives of these [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/introducing-apimatic-cli/">Introducing APIMatic CLI</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="518" class="elementor elementor-518" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-25f5ea89 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="25f5ea89" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-6e3a5307" data-id="6e3a5307" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-4203d7bf elementor-widget elementor-widget-text-editor" data-id="4203d7bf" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class="">A large number of our users describe their APIs using our API editor and generate SDKs from our website. But there is an equally large niche of our users who prefer using our&nbsp;<a href="http://docs.apimatic.apiary.io/">CodeGen API</a>&nbsp;to generate SDKs or our&nbsp;<a href="http://docs.apimatictransformerapi.apiary.io/">Transformer API</a>&nbsp;to transform their API descriptions. We set out with the goal of making the lives of these API users easier and came up with the APIMatic CLI.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:image -->
<div class="wp-block-image">
<figure class="aligncenter size-large">
<p class="mod-reset"><img class="wp-image-519 aligncenter" src="/wp-content/uploads/2021/12/1_fx-_EpWaxA9U4esxbeJyPA.png" alt=""></p>
<figcaption>APIMatic CLI</figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="e18f" class="">APIMatic CLI is a command line tool written in Python which serves as a wrapper over our own Python SDK. It is available in the form of a small windows executable so you can easily plug it into your build cycle. You no longer have to write your own code or set up a development environment for the consumption of our APIs.</p>
<p id="6fe3" class="">The APIMatic CLI will create the API request for you, call the API and download the generated SDK or the converted API description. It even supports unzipping of zipped SDK files. It allows multiple authentication methods and supports all the features of our APIs i.e. SDK generation, API validation and API transformation. You can provide an API description in multiple ways to it as well. It supports API integration keys from APIMatic, API description files from URLs and also allows you to upload API descriptions from your computer.</p>
<p id="e26f" class="">Getting started with the APIMatic CLI is very easy. Let’s take you through a few different methods of installation and show you some examples of its usage.</p>
<h2 id="2a26" class="">Installing APIMatic CLI</h2>
<p id="32af" class="">Since the APIMatic CLI is written in Python, you have multiple installation options. If you don’t have Python installed, the simplest way to go would be to just download the executable from<a href="https://github.com/apimatic/apimatic-cli/releases">here</a>&nbsp;and run it. If you have Python installed, you can use pip to install the APIMatic CLI. Alternatively, you can install it manually or even directly run the code itself. You can check out the documentation on our Github&nbsp;<a href="https://github.com/apimatic/apimatic-cli#installation">page</a>&nbsp;for clear instructions.</p>
<h2 id="f507" class="">Usage</h2>
<p id="cbce">If you have installed APIMatic CLI using pip, you can start using it by typing:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:preformatted -->
<pre><code class="language-bash">apimatic-cli -h</code></pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="6a7d" class="">Command (generate, validate or transform) and authentication (fromkey or fromuser) are the two positional arguments that have to be provided in order to use this tool. There is a whole list of options available for you to build your commands depending on the positional arguments you choose.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted"><code>h or — help       Displays the help text and exists.
-api-key          The API key of the API description obtained from 
                  APIMatic.
-platform         The platform for which the SDK needs to be       
                  generated. It can be one of:
                  cs_portable_net_lib, java_eclipse_jre_lib,    
                  java_gradle_android_lib,
                  objc_cocoa_touch_ios_lib, angular_javascript_lib, 
                  ruby_generic_lib,
                  python_generic_lib, php_generic_lib,    
                  node_javascript_lib, go_generic_lib
-download-to      The path of the folder in which to download the 
                  file.
-name             The name of the generated SDK.
-email            The email address of the user’s APIMatic account.
-password         The password of the user’s APIMatic account.
-url              The URL of the API description.
-file             The path of the API description file.
-format           The format to convert the API description to. It 
                  can be one of:
                  APIBluePrint, Swagger10, Swagger20, SwaggerYaml, 
                  WADL2009, RAML, APIMATIC
-download-as      The name (and extension) of the downloaded file.
-skip-unzip       Unzipping of downloaded SDKs is skipped if this 
                  option is used.</code></pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="1e4d" class="">Now, for instance, you want to generate a C# SDK using an API integration key, all you need to type is:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre><code class="language-bash">apimatic-cli generate fromkey — api-key &lt;your key&gt; — platform cs_portable_net_lib — download-to ./SDKs</code></pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="adce" class="">Similarly, if you want to generate a python SDK using user credentials and an API description file while skipping the unzipping part, you can write the following command line:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre><code class="language-bash">apimatic-cli generate fromuser — email &lt;your APIMatic account email&gt; — password &lt;your APIMatic account password&gt; — name TestSDK — file ./data/calculator.json — platform python_generic_lib — download-to ./SDKs — skip-unzip</code></pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="061b" class="">In this way, whatever functions you’d want to perform, all you’ll need to do is type a command on your CLI and that’s it. I hope this article provides sufficient information regarding APIMatic CLI and its usage. For more information, you can always check it out on<a href="https://github.com/apimatic/apimatic-cli">GitHub</a>&nbsp;where complete documentation is provided.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/introducing-apimatic-cli/">Introducing APIMatic CLI</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/introducing-apimatic-cli/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>APIMatic’s Code Generation Speeds Up the NZOR’s Application Development Cycle</title>
		<link>/blog/apimatics-code-generation-speeds-up-the-nzors-application-development-cycle/</link>
					<comments>/blog/apimatics-code-generation-speeds-up-the-nzors-application-development-cycle/#respond</comments>
		
		<dc:creator><![CDATA[Rehan Alam]]></dc:creator>
		<pubDate>Thu, 18 Feb 2016 09:44:27 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Nzor]]></category>
		<category><![CDATA[Sdk Generation]]></category>
		<category><![CDATA[Success Stories]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=491</guid>

					<description><![CDATA[<p>Fundamental identifiers are used by biodiversity identifiers to recognize organism’s names. Necessary information is provided by names though which they index, manage, and share information relating to biodiversity. NZOR is a definitive to source to provide taxonomic data in identical style and of standard level of quality to overcome the wastage issue of resources. &#160; [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/apimatics-code-generation-speeds-up-the-nzors-application-development-cycle/">APIMatic’s Code Generation Speeds Up the NZOR’s Application Development Cycle</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="491" class="elementor elementor-491" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-76affa1c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="76affa1c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5876b833" data-id="5876b833" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-22755160 elementor-widget elementor-widget-text-editor" data-id="22755160" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class="">Fundamental identifiers are used by biodiversity identifiers to recognize organism’s names. Necessary information is provided by names though which they index, manage, and share information relating to biodiversity. NZOR is a definitive to source to provide taxonomic data in identical style and of standard level of quality to overcome the wastage issue of resources.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->
<p>&nbsp;</p>
<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="aligncenter wp-image-492" src="/wp-content/uploads/2021/12/1_mbNT6T-SzO-_Ep-kD7KEAw.jpg" alt="NZOR uses APIMatic auto-generated SDKs" width="500" height="191" /></p>
</figure>
<!-- /wp:image -->
<p>&nbsp;</p>
<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="c49e" class="">NZOR Web API</h2>
<p id="5488" class="">The NZOR web application programming interface (API) is a publicly accessible service that enables applications to use data from the core NZOR repository in order to provide the following capabilities:</p>
<ul class="">
<li>List and view details about an organism’s name.</li>
<li>Search organism’s names.</li>
<li>List and view details about information providers.</li>
<li>List and view details about enumerations and the vocabulary used to describe entities within NZOR.</li>
</ul>
<h2 id="1736" class="">Landcare Research and NatureHack 2015</h2>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:list /-->

<!-- wp:heading /-->
<p><img class="wp-image-493 alignright" src="/wp-content/uploads/2021/12/1_GWvdcon8JUKnGFx6XxKo4A.jpg" alt="" /></p>
<!-- /wp:image -->
<p>NZOR’s infrastructure is currently hosted by Landcare Research’s. Their core purpose is to drive innovation in the management of terrestrial biodiversity and land resource. Landcare Research played an important role in organizing a weekend hackathon to create new value from New Zealand’s living species and environment. The goal of Nature Hack was to build a simple web service or app related to nature and/or wildlife.</p>
<!-- /wp:paragraph -->
<h2 id="51ea" class="">SDKs — A Valuable Resource for Nature Hack</h2>
<p id="d121" class="">SDKs for NZOR API were generated using APIMATIC and provided to hackathon participants in all major programming languages including Java, Objective-C, C#, PHP, Python, Ruby and AngularJS. SDK’s are very fruitful for coding rock stars participating in Nature Hack and allow them to build web services and applications related to nature by using environmental data provided by Landcare Research.</p>
<p id="7be1">This is what Greg Byrom, Geospatial Professional at Landcare Research, has to say about us:</p>
<blockquote>
<p>“Landcare Research maintain publicly accessible datasets from their extensive collections of New Zealand’s biological heritage. APIMatic has so simplified the process of writing SDKs to access the data from these collections that we wonder what we ever did before! Having an SDK with which developers can hit the ground running speeds up the application development cycle, saving time and resources for the real work. Making the SDKs publicly available via SDKS.IO allows unprecedented access, unlocking the data and enabling its consumption. APIMatic makes it a breeze to build good SDKs and is simple enough for anyone to use yet complete and flexible enough to support complex queries. I love working with APIMatic!”</p>
</blockquote>
<!-- wp:quote /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/apimatics-code-generation-speeds-up-the-nzors-application-development-cycle/">APIMatic’s Code Generation Speeds Up the NZOR’s Application Development Cycle</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/apimatics-code-generation-speeds-up-the-nzors-application-development-cycle/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>API Blueprint Extension for Code Generation Settings</title>
		<link>/blog/api-blueprint-extension-for-code-generation-settings/</link>
					<comments>/blog/api-blueprint-extension-for-code-generation-settings/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Sat, 07 Nov 2015 11:02:52 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Api Blueprint]]></category>
		<category><![CDATA[Apimatic Features]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[Specification Extensions]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=459</guid>

					<description><![CDATA[<p>We have just launched Code Generation Extensions for API Blueprint. These extensions allow customizing the behaviour of APIMatic’s Code Generation Engine. By specifying additional metadata in your API Blueprint description, you can now control the naming conventions, configuration stores and have your custom code branding. We refer to these as Code Generation Settings. Previously, you [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/api-blueprint-extension-for-code-generation-settings/">API Blueprint Extension for Code Generation Settings</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="459" class="elementor elementor-459" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-6f325ab4 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6f325ab4" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-27fe5f49" data-id="27fe5f49" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-24f5460b elementor-widget elementor-widget-text-editor" data-id="24f5460b" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="alignnone wp-image-461" src="/wp-content/uploads/2021/12/1_dg0IM1sORJDG0wZtGFN9Bw-1.png" alt="API Blueprint Extension for Code Generation Settings" width="720" height="167" /></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="25a7" class="">We have just launched Code Generation Extensions for API Blueprint. These extensions allow customizing the behaviour of APIMatic’s Code Generation Engine. By specifying additional metadata in your API Blueprint description, you can now control the naming conventions, configuration stores and have your custom code branding. We refer to these as Code Generation Settings. Previously, you had to import your API Blueprint into APIMATIC format and use our Editor UI to specify these settings. Some while ago we made a similar extension available for Swagger 2.0 (<a href="https://www.apimatic.io/blog/post/swagger-2-0-extension-for-code-generation-settings">read more here</a>). But if your API description uses API Blueprint, you can leverage this as well.</p>
<h2 id="dfd4">API Blueprint CodeGen Settings</h2>
<p id="6551" class="">We extended the <a href="https://docs.apimatic.io/specification-extensions/blueprint-extensions">API Blueprint metadata</a> attribute to specify additional properties. See the following example below:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted"><code>FORMAT: 1A

HOST: &lt;a href=&quot;http://api.datumbox.com/&quot;&gt;http://api.datumbox.com/&lt;/a&gt;GENERATEASYNCCODE: TRUE
USEMETHODPREFIX: TRUE
USEMODELPOSTFIX: TRUE
USECONTROLLERPOSTFIX: TRUE
USEENUMPOSTFIX: TRUE
USECONSTRUCTORSFORCONFIG: TRUE
IOSUSEAPPINFOPLIST: TRUE
IOSGENERATECOREDATA: FALSE
ANDROIDUSEAPPMANIFEST: TRUE
COLLECTPARAMETERS: FALSE
CSHARPDEFAULTNAMESPACE: ACME.CORP.API
JAVADEFAULTNAMESPACE: com.acme.corp.api
APPENDCONTENTHEADERS: TRUE
BRANDLABEL: ACME CORP.
USERAGENT: APIMATIC 2.0
ENABLEADDITIONALMODELPROPERTIES: FALSE</code></pre>
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="e31c" class="">The purpose of these parameters is explained below:</p>
<h2 id="f7da">GENERATEASYNCCODE</h2>
<p id="e8ac">When true, the CodeGen engine generates asynchronous C# and Java code.</p>
<h2 id="fc1c">USEMETHODPREFIX</h2>
<p id="8f4b">When true, HTTP verbs are used as prefix for generated controller methods.</p>
<h2 id="47c6">USEMODELPOSTFIX</h2>
<p id="972b" class="">When true, a postfix “Model” is appended to all classes generated from schemas.</p>
<h2 id="2514">USECONTROLLERPOSTFIX</h2>
<p id="3327">When true, a postfix “Controller” is appended to all controllers generated from path groups.</p>
<h2 id="be10">USEENUMPOSTFIX</h2>
<p id="2aee">When true, a postfix “Enum” is appended to all enumerations lifted from “allowedValues”.</p>
<h2 id="1ed3" class="">USECONSTRUCTORSFORCONFIG</h2>
<p id="8bd5">When true, configuration values e.g., authentication credentials, are accepted as controller constructor parameters. Otherwise, these values generate variables in a Configuration class.</p>
<h2 id="38d5">IOSUSEAPPINFOPLIST</h2>
<p id="b120" class="">When true, configuration values e.g., authentication credentials, are expected in app-info.plist file for the iOS SDK. When set, this setting ignores useConstructorsForConfig flag.</p>
<h2 id="712b">IOSGENERATECOREDATA</h2>
<p id="2349">When true, iOS CoreData schema and classes are generated.</p>
<h2 id="f3a7">ANDROIDUSEAPPMANIFEST</h2>
<p id="34b4" class="">When true, configuration values e.g., authentication credentials, are expected in AndroidManifest.xml file for the Android SDK. When set, this setting ignores <code>useConstructorsForConfig</code> flag.</p>
<h2 id="0a87">COLLECTPARAMETERS</h2>
<p id="7a93" class="">When true, operation parameters are expected to passed as a collection. For example in PHP, the generated method expects a Map containing parameters as Key-Value pairs. This is currently implemented for PHP, Python, GO, and Objective-C. When set, this is applied globally on all endpoints/operations. If you wish to use this option on specific endpoints, use the <code>x-operation-settings:collectParameters</code> instead.</p>
<h2 id="5b17">CSHARPDEFAULTNAMESPACE</h2>
<p id="e17b">A valid C# namespace value to be used as the default namespace. Leave empty or null to automatically generate.</p>
<h2 id="9249">JAVADEFAULTNAMESPACE</h2>
<p id="1c84">A valid Java package name to be used as the base package name. Leave empty or null to automatically generate. This value is applied for both Java and Android code generation templates.</p>
<h2 id="42b1">APPENDCONTENTHEADERS</h2>
<p id="48e5">When true, code generation engine automatically detects request and response schema and appends content headers e.g., “<code>accept: application/json</code>” and “<code>content-type: application/json</code>” headers for JSON serialization mode.</p>
<h2 id="dd20">BRANDLABEL</h2>
<p id="498b">A string value to brand the generated files. For example: “Acme Corp.”</p>
<h2 id="9bc8">USERAGENT</h2>
<p id="854b">A string value to use as user-agent in the API calls. This is useful for analytics and tracking purposes. For example: “SDK V1.1”</p>
<h2 id="488d">ENABLEADDITIONALMODELPROPERTIES</h2>
<p id="6f8f" class="">When true, additional or unknown properties in the response JSON are collected into a dictionary.</p>
<p id="f463">Please direct any queries on this aspect to our <a href="https://apimatic.zendesk.com/">support portal</a>.</p>
</div>
</div>
</div>
</div>
<!-- /wp:preformatted -->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/api-blueprint-extension-for-code-generation-settings/">API Blueprint Extension for Code Generation Settings</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/api-blueprint-extension-for-code-generation-settings/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Improving Developers Success with APIMatic SDKs for Mashery APIs</title>
		<link>/blog/improving-developers-success-with-apimatic-sdks-for-mashery-apis/</link>
					<comments>/blog/improving-developers-success-with-apimatic-sdks-for-mashery-apis/#respond</comments>
		
		<dc:creator><![CDATA[Adeel Ali]]></dc:creator>
		<pubDate>Mon, 06 Jul 2015 10:31:00 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Apimatic]]></category>
		<category><![CDATA[Apimatic Partners]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Mashery]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=463</guid>

					<description><![CDATA[<p>Do you know what developers hate the most? They don’t hate working for 12 hours a day; they don’t even hate working over weekends. What they really hate is working on non-challenging and monotonous tasks. A classic example is maintaining SDKs or client libraries for an API, which typically happens every time a provider updates [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/improving-developers-success-with-apimatic-sdks-for-mashery-apis/">Improving Developers Success with APIMatic SDKs for Mashery APIs</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="463" class="elementor elementor-463" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-4215ca0c elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="4215ca0c" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-2242a291" data-id="2242a291" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-289df51a elementor-widget elementor-widget-text-editor" data-id="289df51a" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-464 aligncenter" src="/wp-content/uploads/2021/12/1_x4v6DawjNEfeSf-r5LYZkQ-1024x256.png" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="e7bf" class="">Do you know what developers hate the most? They don’t hate working for 12 hours a day; they don’t even hate working over weekends. What they really hate is working on non-challenging and monotonous tasks.</p>
<p id="5fae" class="">A classic example is maintaining SDKs or client libraries for an API, which typically happens every time a provider updates their APIs. On the API provider side, maintaining an SDK or a client library is not just time consuming, but it’s also a monotonous task. On the consumption side, a developer would much rather focus on business logic and design of an app instead of trying to figure out how to communicate with an API — especially during hackathons where every second matters.</p>
<h2 id="4219" class="">The solution?&nbsp;APIMatic</h2>
<p id="2046" class=""><a href="https://www.apimatic.io/">APIMatic</a> generates SDKs for APIs automatically in all major programming languages so that developers can consume APIs in their favourite development environment with less code, in less time, with less effort, and with more fun.</p>
<h2 id="1a90" class="">SDKs for Mashery APIs with APIMatic</h2>
<p id="d8bf" class="">Mashery offers one of the best developer engagement programs in the API space. Reaching out directly to developers at over a hundred hackathons every year is really impressive, and that’s why a large number of API providers trust Mashery to showcase their APIs to the world.</p>
<p id="7e55" class="">APIMatic has collaborated with Mashery&nbsp;to provide SDKs/client libraries for Mashery powered RESTful APIs — ranging from Beats Music, Edmunds.com and many more. Automatically generated client libraries are available for iOS, Android, Javascript, Python, Ruby, PHP, Java, Go and .NET.</p>
<p id="48e8" class="">The idea is to make developers more productive by supplying SDKs in their favourite programming languages in addition to interactive documentation and other tools around&nbsp;<a href="http://dev.mashery.com/"> Mashery’s I/O Docs</a>, all in a single place. This will make it easier for developers to use and adopt Mashery APIs.</p>
<p id="9bf5" class="">Initial integration was successfully tested at a&nbsp;<a href="http://content.developer.mashery.com/newsletter/04-2015/index.html">developers’ event</a>&nbsp;with&nbsp;<a href="http://developer.edmunds.com/">Edmunds</a>&nbsp;Dealer and Vehicle APIs.</p>
<h2 id="5f8b" class="">Painless SDK Maintenance — A Relief for API Providers</h2>
<p id="95e3" class="">This integration mainly answers the criticism&nbsp;on SDKs that they are expensive to build and painful to update/maintain. Since the SDKs are automatically generated from&nbsp;I/O Docs&nbsp;there’s not a single line of code required to build and maintain the SDKs. The only requirement is to keep the API description up-to-date and leave the rest on APIMATIC’s crawler.</p>
<h2 id="2368" class="">SDKs for Developers — The Way They Want!</h2>
<p id="fb5d" class="">Developers love having control over the code they’re working on. That’s why APIMatic gives them options to tweak the code they’re going to generate. From minor things such as prefixes and postfixes, to major stuff such as dynamic parameters and asynchronous code, developers have control over all aspects. The code generation settings can be accessed by exporting any API to APIMatic. Exporting an API also enables the developers to add request and response models (schema types) layer in the SDKs, which are currently not available in default ioDocs documents.</p>
<p id="72f0" class="">To conclude, supplementing the Mashery repository of APIs with high quality SDKs would probably be a win-win for Mashery customers, their internal developers, and 3rd party consumers. API providers will get much faster and economical access to more developer communities while application developers will enjoy the huge reduction in workload that could allow them to focus on other challenging and important stuff, and/or spend more time with their loved ones. After all, we all love developers <img src="https://s.w.org/images/core/emoji/13.1.0/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p id="58e0" class=""><em>This blog post originally appeared on&nbsp;</em><a href="http://www.mashery.com/blog/improving-developers-success-apimatic-sdks-mashery-apis"><em>The Mashery Blog</em></a><em>&nbsp;on May 26, 2015.</em></p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/improving-developers-success-with-apimatic-sdks-for-mashery-apis/">Improving Developers Success with APIMatic SDKs for Mashery APIs</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/improving-developers-success-with-apimatic-sdks-for-mashery-apis/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Announcing Code Generation API</title>
		<link>/blog/announcing-code-generation-api/</link>
					<comments>/blog/announcing-code-generation-api/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Sun, 21 Jun 2015 11:02:52 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Apimatic Features]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Restful Api]]></category>
		<category><![CDATA[Sdk Generation]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=466</guid>

					<description><![CDATA[<p>APIMatic’s automatic code generation is now publicly available for our users. You can check out its API documentation here. The Code Generation API allows you to do interesting stuff with SDK generation for your API. Some of the interesting uses of this API that we could think of are as follows. Provide freshly-squeezed SDKs for [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/announcing-code-generation-api/">Announcing Code Generation API</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="466" class="elementor elementor-466" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-435f7dde elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="435f7dde" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-6fab6970" data-id="6fab6970" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-99424c2 elementor-widget elementor-widget-text-editor" data-id="99424c2" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-467 aligncenter" src="/wp-content/uploads/2021/12/1_1MbRUd5V1fDD3cTFrrvQGg.png" alt="Code Generation API" width="632" height="310"></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="7b3f" class="">APIMatic’s automatic code generation is now publicly available for our users. You can check out its <a href="https://docs.apimatic.io/">API documentation here</a>. The Code Generation API allows you to do interesting stuff with SDK generation for your API. Some of the interesting uses of this API that we could think of are as follows.</p>
<ul class="">
<li>Provide freshly-squeezed SDKs for your API on your developer portal</li>
<li>Validate your API backend through its generated description file</li>
<li>Batch script to push your SDKs to GitHub or other code repos</li>
<li>Hook this API in your continuous integration (CI) cycle for automatic code generation</li>
</ul>
<p id="8568" class="">As you might have guessed, this is the same API we use for our SDKs search engine&nbsp;&nbsp;SDKS.IO&nbsp;&nbsp;as well as our Javascript widget. Let us know if you have found any other interesting use case for our API and we will update the list. If you have any suggestion of feature request for this API, we would love to hear from you.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:list /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/announcing-code-generation-api/">Announcing Code Generation API</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/announcing-code-generation-api/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
