
<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Developer Experience Archives - APIMatic</title>
	<atom:link href="/blog/tag/developer-experience/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>APIMatic is an API documentation tool that provides a complete set of DX components such as autogenerated SDKs, API portal, API docs, live code samples, and more.</description>
	<lastBuildDate>Tue, 21 Dec 2021 08:21:43 +0000</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.4</generator>

<image>
	<url>/wp-content/uploads/2021/10/cropped-cropped-apimaticio-favicon-1-32x32.png</url>
	<title>Developer Experience Archives - APIMatic</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>DX of SDKs vs Direct API Calls</title>
		<link>/blog/dx-of-sdks-vs-direct-api-calls/</link>
					<comments>/blog/dx-of-sdks-vs-direct-api-calls/#respond</comments>
		
		<dc:creator><![CDATA[Adam DuVander]]></dc:creator>
		<pubDate>Mon, 11 Oct 2021 10:32:19 +0000</pubDate>
				<category><![CDATA[API Documentation]]></category>
		<category><![CDATA[API Portal]]></category>
		<category><![CDATA[Code Samples]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[API Calls]]></category>
		<category><![CDATA[auto-generated SDKs]]></category>
		<category><![CDATA[Direct API Calls]]></category>
		<category><![CDATA[Sdks]]></category>
		<guid isPermaLink="false">https://apimatic.io/blog/?p=1519</guid>

					<description><![CDATA[<p>What&#8217;s it like to call your API? Developers want to use your API to accomplish something, and you want to make it as easy as possible for them to incorporate your service. To allow developers to call your API directly from any technology, your docs provide DIY instructions. To go a step further and give [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/dx-of-sdks-vs-direct-api-calls/">DX of SDKs vs Direct API Calls</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="1519" class="elementor elementor-1519" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-7825289e elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="7825289e" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5ad04015" data-id="5ad04015" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-687f92af elementor-widget elementor-widget-text-editor" data-id="687f92af" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
			<style>/*! elementor - v3.5.6 - 28-02-2022 */
.elementor-widget-text-editor.elementor-drop-cap-view-stacked .elementor-drop-cap{background-color:#818a91;color:#fff}.elementor-widget-text-editor.elementor-drop-cap-view-framed .elementor-drop-cap{color:#818a91;border:3px solid;background-color:transparent}.elementor-widget-text-editor:not(.elementor-drop-cap-view-default) .elementor-drop-cap{margin-top:8px}.elementor-widget-text-editor:not(.elementor-drop-cap-view-default) .elementor-drop-cap-letter{width:1em;height:1em}.elementor-widget-text-editor .elementor-drop-cap{float:left;text-align:center;line-height:1;font-size:50px}.elementor-widget-text-editor .elementor-drop-cap-letter{display:inline-block}</style>				<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class=""><img class="aligncenter wp-image-1552 " src="/wp-content/uploads/2021/12/dx-of-sdks-vs-api-calls-1024x459.png" alt="" width="771" height="346"></p>
<p class=""><span style="font-weight: 400;">What&#8217;s it like to call your API? Developers want to use your API to accomplish something, and you want to make it as easy as possible for them to incorporate your service. To allow developers to call your API directly from any technology, your docs provide DIY instructions. To go a step further and give developers additional conveniences and tooling, you can provide Software Development Kits (SDKs). SDKs include code to call your API so that developers don&#8217;t have to write it themselves from scratch.</span></p>
<p class=""><span style="font-weight: 400;">While calling an API directly vs. using an SDK does not change the ultimate functionality of the API, it can dramatically affect the developer experience. In most cases, one method will be preferred over the other, varying according to each developer’s needs, preferences, and skills. An SDK offers simplicity and speedier development but applies only to a particular development framework. SDKs require resources to develop and maintain. Direct calls offer platform flexibility and are available to all developers, but are harder to use without expertise.</span></p>
<p class=""><span style="font-weight: 400;">In this article, we&#8217;ll be looking at why your developer experience may focus on direct API calls, SDKs, or both.</span></p>

<h2 class=""><span style="font-weight: 400;">Direct API Calls: The Basics</span></h2>
<span style="font-weight: 400;">For communicating with a service, sending API calls directly to URL endpoints is the simplest way. Of course, when we say </span><i><span style="font-weight: 400;">simplest</span></i><span style="font-weight: 400;">, we mean in terms of program complexity, not ease of use.</span>
<p class=""><span style="font-weight: 400;">When using an API without an SDK, you make calls to its URL endpoints directly using standard internet protocol commands for transferring packets of information over the network. There&#8217;s no abstraction between you and the service, so every parameter must be written into the call. It must also conform to a standard format.</span></p>
<p class=""><span style="font-weight: 400;">An example of how to construct a direct API call using Python is shown in the code snippet below. Notice the URL for the API endpoint is specified explicitly, alongside required header parameters that describe the request. This information is bundled and transmitted using the <code>requests</code> library, which then receives any response data returned by the API and stores it in the <code>resp</code> variable. Note that the cost of deserialization is added here for the API call.</span></p>

<pre class=""><code class="language-python">import requests
from requests.structures import CaseInsensitiveDict

url = &quot;https://connect.squareup.com/v2/payments&quot;

headers = CaseInsensitiveDict()
headers[&quot;Square-Version&quot;] = &quot;2021-06-16&quot;
headers[&quot;Authorization&quot;] = &quot;Bearer ACCESS TOKEN&quot;
headers[&quot;Content-Type&quot;] = &quot;application/json&quot;

resp = requests.get(url, headers=headers)
print(resp.status_code)

decoded = jsonpickle.decode(resp.text)
</code></pre>
<p class=""><span style="font-weight: 400;">Another example of a non-trivial API call can be seen here, pulled from the User Authentication documentation for the</span> <a href="https://www.dropbox.com/developers/documentation"><span style="font-weight: 400;">Dropbox API</span></a><span style="font-weight: 400;">:</span></p>


<figure id="attachment_1520" aria-describedby="caption-attachment-1520" style="width: 790px" class="wp-caption aligncenter"><img class="wp-image-1520 " src="/wp-content/uploads/2021/12/dropbox-1024x677.png" alt="dropbox user authentication" width="790" height="523"><figcaption id="caption-attachment-1520" class="wp-caption-text">Dropbox User Authentication Docs</figcaption></figure>

<span style="font-weight: 400;">For many developers, the need to specify every parameter is exactly what they want: the full power of the service at their fingertips.</span>
<p class=""><span style="font-weight: 400;">Low-level control can be unnecessary and overwhelming, though, especially for new developers. With just the basic building blocks, it can become a challenge for developers to perform more complicated tasks.</span></p>
<p class=""><span style="font-weight: 400;">Not only can direct API calls be complicated to do correctly, but they can also be frustrating to try to troubleshoot. API response codes aren&#8217;t particularly specific when providing error messages; Many developers may give up after countless generic 404 errors.</span></p>
<p class=""><span style="font-weight: 400;">Ultimately, many developers will wish they could have something a little more prepared for them. For those developers, you can please them by offering SDKs in their language.</span></p>

<h2 class=""><span style="font-weight: 400;">SDKs: What Are They?</span></h2>
<p class=""><span style="font-weight: 400;">SDKs are a compilation of environment-specific developer tools designed to access your API. SDKs make it more straightforward for developers to use your API using a programming language framework they prefer. For the developer who wants a little more guidance, SDKs will be the most appealing way for them to access your service.</span></p>
<p class=""><span style="font-weight: 400;">SDKs abstract away the minutiae of the API that often bog down implementation for developers. They can be thought of as an API wrapper that makes accessing that API more friendly to a particular type of developer. A developer has to download and install an SDK that matches the language of their development environment, where it will then provide a host of streamlined functionalities for interacting with your API. If the developer is using Python, for instance, they’ll most likely download an SDK through pip, such as this example from </span><a href="https://www.algolia.com/doc/guides/getting-started/quick-start/tutorials/quick-start-with-the-api-client/python/?client=python"><span style="font-weight: 400;">Algolia’s documentation</span></a><span style="font-weight: 400;">:</span></p>


<figure id="attachment_1521" aria-describedby="caption-attachment-1521" style="width: 721px" class="wp-caption aligncenter"><img class="wp-image-1521 " src="/wp-content/uploads/2021/12/algolia-1024x350.png" alt="Algolia Documentation" width="721" height="247"><figcaption id="caption-attachment-1521" class="wp-caption-text">Algolia SDK download through pip</figcaption></figure>
<p class=""><span style="font-weight: 400;">The example call to Dropbox&#8217;s API, shown earlier, constructed with their Python SDK is shown below. In contrast to a direct API call, it does not require the developer to hard code a URL and headers. Instead, the API token is passed to a provided client object that handles those details.</span></p>

<pre class=""><code class="language-python">import dropbox
token = &#039;My-API-Token&#039;
dbx = dropbox.Dropbox(token)

My_Field = dropbox.file_properties.PropertyField(&#039;Security Policy&#039;,&#039;Confidential&#039;)
My_Template_ID = &#039;ptid:1...&#039;
My_Property_Group = dropbox.file_properties.PropertyGroup(template_id=My_Template_ID, fields=[My_Field])

dbx.file_properties_properties_add(&quot;/my_awesome/word.docx&quot;, My_Property_Group)
</code></pre>
<span style="font-weight: 400;">While APIs aren&#8217;t language-specific, SDKs are. A developer will download the SDK for the specific language they want to work with. API providers that intend to offer SDKs have to research what languages most appeal to their core user base. Developers who have the use of an SDK will be incredibly satisfied by the bevy of tools made available for them, including, but not limited to:</span>
<ul class="">
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Autocomplete SDK commands inline</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Code samples for commands</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">Example applications</span></li>
</ul>
<span style="font-weight: 400;">A beneficial everyday use case where SDKs are much easier to use than direct API calls is when developers need to perform complicated authentication procedures. Doing this correctly and securely with only direct API calls can be tricky, but most SDKs take these steps and make them easily implementable with just a few commands. The low-level API call parameters and structure are abstracted away from the developer and handled by the SDK.</span>

<span style="font-weight: 400;">In many ways, SDKs are the epitome of one of the main purposes of APIs: to give the developer the ability to build off existing technology as easily and quickly as possible.</span>
<p class=""><span style="font-weight: 400;">For many developers, SDKs are the preferred method of interacting with APIs. For others, there are cases for making direct API calls without an SDK. Now that we&#8217;ve looked at both options let&#8217;s see why developers would lean towards one or the other.</span></p>

<h2><span style="font-weight: 400;">Choosing Between SDKs and Direct API Calls</span></h2>
<p class=""><span style="font-weight: 400;">In an ideal world, there will be an SDK available to meet the developer’s exact needs. SDKs cost resources to produce and maintain, however. And even when SDKs are available, there are quite a few situations where the available SDKs might not work for what a developer wants to do. Just to list a few:</span></p>

<ul>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">An SDK may not be available in their desired language</span></li>
 	<li style="font-weight: 400;" aria-level="1"><span style="font-weight: 400;">The SDK may not be updated to incorporate new API features yet</span></li>
</ul>
<p class=""><span style="font-weight: 400;">In both of these situations, directly using the API might be the only option. After all, it takes time and effort for an API provider to build SDKs. If there&#8217;s only one Julia developer using your API who wants a Julia SDK, it might not justify the use of resources.</span></p>
<p class=""><span style="font-weight: 400;">Even for the SDKs of languages you deem popular enough to support, it takes time and effort to update those SDKs. Functionality added to an API yesterday may not be supported in the SDK by today.</span></p>
<p class=""><span style="font-weight: 400;">For the vast majority of use cases, developers will appreciate having SDKs available and will eagerly use them. This is especially true for those who are making use of multiple APIs in their applications. For that reason, SDKs are worth the time and effort to develop for your primary user groups. The effort it takes to provide up-to-date SDKs will save them effort as they can seamlessly incorporate API calls into their app code.</span></p>
<p class=""><span style="font-weight: 400;">And for those edge case developers, those who code in esoteric languages, those who need maximum security control over what the API is doing, and those who want to be on the cutting edge no matter what, direct API calls are most useful.</span></p>
<p class=""><span style="font-weight: 400;">A great example of a company showing both direct API and SDK calls in their documentation is </span><a href="https://stripe.com/docs/api/"><span style="font-weight: 400;">Stripe</span></a><span style="font-weight: 400;">:</span></p>


<figure id="attachment_1522" aria-describedby="caption-attachment-1522" style="width: 576px" class="wp-caption aligncenter"><img class="wp-image-1522 size-full" src="/wp-content/uploads/2021/12/stripe.gif" alt="Stripe API documentation showing both SDKs and API calls" width="576" height="296"><figcaption id="caption-attachment-1522" class="wp-caption-text">Stripe API documentation showing both SDKs and API calls</figcaption></figure>

<span style="font-weight: 400;">Both direct API calls and SDKs are tools that you should make available in your developers&#8217; toolboxes. And the more tools at their disposal, the more effective your developers will be.</span>
<p class=""><span style="font-weight: 400;">At the end of the day, the goal of your developer experience should be improving the accessibility of your product to developers of all backgrounds. Providing SDKs is the best way to make your API a little more manageable for them to implement.</span></p>
<p class=""><span style="font-weight: 400;">
</span>Have a look at how <a href="https://www.apimatic.io/developer-experience-portal">APIMatic enhances the developer experience</a> of your API with robust SDKs auto-generated in all popular languages from a single API definition file.</p>

</div>
</div>
</div>
</div>						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/dx-of-sdks-vs-direct-api-calls/">DX of SDKs vs Direct API Calls</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/dx-of-sdks-vs-direct-api-calls/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>State of Developer Experience: SMS APIs 2020</title>
		<link>/blog/state-of-developer-experience-sms-apis-2020/</link>
					<comments>/blog/state-of-developer-experience-sms-apis-2020/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Mon, 02 Dec 2019 11:02:52 +0000</pubDate>
				<category><![CDATA[API Documentation]]></category>
		<category><![CDATA[API Portal]]></category>
		<category><![CDATA[Communication APIs]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Sms]]></category>
		<category><![CDATA[Sms Marketing]]></category>
		<category><![CDATA[Software Development]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=436</guid>

					<description><![CDATA[<p>Every day, 23 billion SMS messages are sent worldwide, which is equivalent to 16 million messages per minute, exchanged between 7 billion mobile subscribers across the world — (CTIA) The SMS industry is huge, and the bulk SMS industry huger. Wide adoption and availability of the technology has made it the number one choice of [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/state-of-developer-experience-sms-apis-2020/">State of Developer Experience: SMS APIs 2020</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="436" class="elementor elementor-436" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-21c95151 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="21c95151" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-33c470a0" data-id="33c470a0" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-188ddceb elementor-widget elementor-widget-text-editor" data-id="188ddceb" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-437 aligncenter" src="/wp-content/uploads/2021/12/1_9S0vdIiVL9SvUXrR4vLH8w-1024x512.jpg" alt="State of Developer Experience: SMS APIs 2020" width="1024" height="512"></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<blockquote class="">
<p id="16fa" class="">Every day, 23 billion SMS messages are sent worldwide, which is equivalent to 16 million messages per minute, exchanged between 7 billion mobile subscribers across the world — (CTIA)</p>
</blockquote>
<p id="4cab" class="">The SMS industry is huge, and the bulk SMS industry huger. Wide adoption and availability of the technology has made it the number one choice of communication for businesses, who can now reach out to millions of people across the globe with the minimum of effort. Businesses today are making use of SMS messages to send alerts of all kinds, and for a very good reason.</p>
<blockquote class="">
<p id="d3ad" class="">SMS messages are more likely to be opened than Emails, a typical message is read within 3 minutes with a CTR of 19% versus 2% for email.</p>
</blockquote>
<p id="b46e" class="">A lot of that is being done over (A2P), Application-to-Person, where an application is programmed to trigger messages at particular intervals or events. There are a number of tools available to run these campaigns, but none as customizable and powerful as SMS APIs which give direct control to businesses to build messaging facilities straight into their systems.</p>
<p id="9dc1" class="">As of now, they are more than&nbsp;<strong>750 Messaging APIs</strong>&nbsp;currently listed on Programmable Web, with more and more services being listed daily. Using SMS APIs, companies can send complex 2-Way SMS messages, marketing messages, verification messages, notifications, alerts and warnings of all kinds.</p>
<p id="0f97" class="">To see what makes some of these APIs so popular, we shortlisted a pool of them, analyzed what they had to offer, and what really makes them so popular in this age and time. The APIs that we analyzed include:</p>
<ul class="">
<li>Twilio</li>
<li>Nexmo</li>
<li>Plivo</li>
<li>Telstra</li>
<li>AT&amp;T</li>
<li>Bandwidth</li>
<li>ClickSend</li>
<li>MessageMedia</li>
</ul>
<p id="db07" class="">For the analysis, we started off by looking at the features these APIs have to offer, followed by the compliances they meet, and then their Developer Experience programs. By the end of the blog, you would know what does it take to stand out in the industry and compete with the giants we know today.</p>
<h2 id="9de9"><strong>Essential Features — SMS APIs 2019</strong></h2>
<p id="53af" class="">Analyzing these APIs in terms of the functionality they provide, we recognized that there are a set of features that are common to most of them. These features are the bare essentials if you want to make it in the SMS APIs space. They include:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:list /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-438 aligncenter" src="/wp-content/uploads/2021/12/1_OVg9CFI3FVS4MJiJUYoohA.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="8d87" class="">Many of the APIs included in this study go beyond that and have added more value, building on these features. For instance Twilio allows sending of MMS messages, allowing senders to attached pictures or other forms of media. Furthermore, they have a mechanism to recognize the optimum routes to send out messages, ensuring guaranteed delivery in record time. Nexmo features a persistent sending ID, using the same number to send messages to one person. Plivo features number pooling, to distribute campaign loads and ensure quicker delivery.</p>
<h2 id="3099"><strong>Compliance Requirements — SMS APIs 2019</strong></h2>
<p id="8c9e" class="">For the telecommunication industry, one of the biggest challenges faced is being compliant with local and international regulations. Often continents, countries, states and even specific carrier networks, have a set of rules they abide with, and unless an SMS API caters to these rules, messages may never be delivered as intended and campaigns may go in vain.</p>
<p id="6064" class="">For most top SMS APIs, all these regulations are met and precautions are implemented, some important regulations and guides include:</p>
<ul class="">
<li><a href="https://www.fdic.gov/regulations/compliance/manual/8/viii-5.1.pdf">The TCPA (<em>Telephone Consumer Protection Act)</em></a></li>
<li><a href="https://api.ctia.org/wp-content/uploads/2019/07/190719-CTIA-Messaging-Principles-and-Best-Practices-FINAL.pdf">CTIA Messaging Principles and Best Practices</a></li>
<li><a href="https://docs.wixstatic.com/ugd/9456a5_72a6056a11f5401c95d29181e850625b.pdf">CTIA Short Code Monitoring Handbook</a></li>
</ul>
<p id="9a39">Some common practices to be globally compliant by most regulations include:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:list /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-439 aligncenter" src="/wp-content/uploads/2021/12/1_X_kTbzcew9iAPJo5qvqq4A.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="57e4" class=""><strong>What Really Makes Great SMS APIs?</strong></h2>
<p id="6b08" class="">So by now, if you are trying to rate one SMS API over the other, you probably would run into too many of them offering the same set of features, with different implementations, all offering them one way or the other, leaving you guessing that which of them is really worth it?</p>
<p id="ecc8" class="">And for that, we take you to the question,&nbsp;<strong>what makes a great API?</strong></p>
<p id="5e94" class="">And the unanimous answer to that is great&nbsp;<strong>Developer Experience.</strong>&nbsp;All the best APIs are easy to consume and require shorter development time to integrate. At the end of the day, each API is supposed to facilitate interoperability, and the easier is it to integrate, the better the API.</p>
<p id="a149" class="">To see how these SMS APIs stood out, we analyzed their publicly available Docs and Developer Portals and came up with the matrix below, which summarizes our findings.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-440 aligncenter" src="/wp-content/uploads/2021/12/1_q_AESiXsFaY4P0uKPSMWHg-1024x640.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="4f3d">Where each of these API providers fills in quite a number of checks on the Developer Experience Checklist, each of them stood out in some respective fields.</p>
<p id="481b" class="">Twilio, Nexmo and ClickSend do a wonderful job with their Landing Pages, which do a great job onboarding users with what facilities they offer, what features does the API come with and how can they help them solve problems with tons of uses cases, tutorials, and Sample Apps. Almost all API Providers have made use of visuals and diagrams to explain the inner workings of an API.</p>
<p id="ef3a" class="">Bandwidth offers a Sandbox environment where users could play around with the API, similarly, MessageMedia offers an API console where Code Samples can be tried around with. Telstra has a run in postman button, where you can try out sample calls, the click of a button takes you to the postman tool.</p>
<p id="ec68">Both Twilio and Nexmo offer a dedicated API Service Status page, with intuitive layout structures that help consumers get to their desired bit of information faster.</p>
<p id="d7b9" class="">SDKs and Code Samples are also something that all these popular APIs have to offer, popular languages being: Ruby, PHP, Python, JavaScript, C# and Node.</p>
<h2 id="1752" class=""><strong>Great Developer Experience: A Challenge</strong></h2>
<p id="d64f" class="">If you are out at this making an SMS API, it’s essential that you miss out on none of these offerings, or you will stand no chance against the competition. Often smaller teams come up with brilliant technology but lack the numbers to focus on anything else except the core offering. It is just as essential to focus on material revolving around the API, the marketing pages, documentation, client libraries and much more, all of which take a lot of time, effort and energy, but without none of which your API will see success or adoption.</p>
<p id="54e5" class="">While companies like Twilio, Nexmo, and AT&amp;T can afford to heavily invest in programs like that, for startups and smaller companies it becomes impossible to spare time or money. With the cost and time it takes to produce all of this material, it’s not scalable with evolution, often Docs and SDKs lag far behind when APIs are multiple versions ahead, and this is the reason.</p>
<p id="4f0d" class="">So the challenge here is how do you take your brilliant API out to developers when you don’t have the means to keep it developer-friendly for long?</p>
<p id="050f" class="">And the answer lies in automation, while a human developer may take several days to produce and maintain all of these components, Code-Gen Engines can take an API Spec as input to automatically generate all of these components and all of it within a few minutes. Want to make updates to your API? Don’t worry, build the engine into your CI/CD pipeline and generate new components with every new push, release or update.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-441 aligncenter" src="/wp-content/uploads/2021/12/0_UFKse1UtCEOQwgJr.gif" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="691f" class="">All you now have to do is, add more and more features to your API, make it compliant to the point you can rollover your competition, while a Code-Gen Engine takes care of the material you need to put it out in front of Developers.</p>
<p id="7373" class="">Need to talk more about automating Developer Experience?&nbsp;<a href="https://www.apimatic.io/contact">Speak to us</a>&nbsp;today and we’ll help you get started.</p>
<p class="">Thanks to&nbsp;Adam DuVander.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/state-of-developer-experience-sms-apis-2020/">State of Developer Experience: SMS APIs 2020</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/state-of-developer-experience-sms-apis-2020/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>State of Developer Experience: Banking and FinTech 2019</title>
		<link>/blog/state-of-developer-experience-banking-and-fintech-2019/</link>
					<comments>/blog/state-of-developer-experience-banking-and-fintech-2019/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Tue, 09 Jul 2019 11:02:52 +0000</pubDate>
				<category><![CDATA[API Documentation]]></category>
		<category><![CDATA[API Portal]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[FinTech APIs]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Banking]]></category>
		<category><![CDATA[Fintech]]></category>
		<category><![CDATA[Software Development]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=660</guid>

					<description><![CDATA[<p>The Banking and Finance industry is one of the most heavily regulated sectors of the world. The regulations, although important to protect the integrity of the system and customer interest, come at the cost of hindered advancement and such had been the case for the industry. This was until the rise of FinTech companies, who [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/state-of-developer-experience-banking-and-fintech-2019/">State of Developer Experience: Banking and FinTech 2019</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="660" class="elementor elementor-660" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-34f857ff elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="34f857ff" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-4aea8260" data-id="4aea8260" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-4a141574 elementor-widget elementor-widget-text-editor" data-id="4a141574" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-661 aligncenter" src="/wp-content/uploads/2021/12/1_AwRHHaXNeo1O2pu7hQz8ag-1024x512.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="d6ac" class="">The Banking and Finance industry is one of the most heavily regulated sectors of the world. The regulations, although important to protect the integrity of the system and customer interest, come at the cost of hindered advancement and such had been the case for the industry.</p>
<p id="db59" class="">This was until the rise of FinTech companies, who leveraged APIs as gateways to expose traditional financial services so that third-party developers could build custom solutions on top of them. There’s a lot you can achieve with FinTech APIs, without having to go through the labor of manually implementing any functionality.</p>
<blockquote class="wp-block-quote">
<p>A simple query on&nbsp;<a href="https://www.programmableweb.com/search/financial"> ProgrammableWeb</a>shows there are&nbsp;<em>1956</em>&nbsp;APIs listed under the tag of Financial APIs, with around&nbsp;<em>290</em>&nbsp;listed this very year.</p>
</blockquote>
<p id="e432" class="">FinTech APIs are putting immense pressure on Traditional Banking and Financial Organisations, who are actively trying to catch up. Customers today expect advanced, frictionless experiences and banks with traditional business models are failing to provide them.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:quote /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<div class="wp-block-image">
<figure class="aligncenter size-large">
<p class="mod-reset"><img class="wp-image-662 aligncenter" src="/wp-content/uploads/2021/12/1_o6g31nFwrWSkx9twG7rzOw.jpg" alt=""></p>
<figcaption>A stat from EY’s FinTech Adoption Index shows that globally, 64% of “Digitally active consumers” are using FinTech applications in favor of traditional banking ones.</figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="d65f" class="">When <a href="https://assets.ey.com/content/dam/ey-sites/ey-com/en_gl/topics/banking-and-capital-markets/ey-global-fintech-adoption-index.pdf">Ernst and Young&nbsp; </a>conducted their first study on FinTech adoption in 2015, they found adoption rates for FinTech as low as 10% amongst the consumers they surveyed. The number rose to 33% in 2017 and now stands at 64%. More and more individuals especially millennials, are shying away from traditional banking and instead are inclined more towards digital solutions put out by these FinTech companies.</p>
<p id="4c55" class="">It’s clearly time for banks to explore newer business models and to expose data and functionality in a similar fashion, acting as the infrastructure or platform on which financial services of the future are built. Else tech giants or startups in the space will ultimately wipe them over.</p>
<h2 id="d558" class="">Open Banking and Europe’s PSD2</h2>
<p id="9911" class="">In 2015 the European Parliament adopted new legislation, Payment Services Directive 2 better known as <a href="https://www.ecb.europa.eu/paym/intro/mip-online/2018/html/1803_revisedpsd.en.html">PSD2</a>, to streamline the digitalisation of banks and financial services. The directive obligates banks across Europe to make banking data and services available to third-party developers, so they can build value-added services on top of them.</p>
<p id="dca9">The concept of Open Banking, on the other hand, has been around for much longer and it suggests that banks provide access to user data via Open APIs, so that they can partner with external entities to improve customer experience.</p>
<p id="0b6b" class="">The Open Banking Initiative is powering PSD2 today, for which deadlines are running out and banks are putting out APIs on a daily basis. The directive has provided Banks with an excellent opportunity to make their mark, tight deadlines have forced banks to work faster on API preparation, resulting in 529 Banking APIs publicly listed as of today.</p>
<p id="4a24">Banks, because of the initiative, and the legislation are on their way to make a comeback, but is just putting out an API enough?</p>
<h2 id="33c8" class="">Developer Experience Makes APIs Useable</h2>
<p id="5ca8" class="">Developers today have a wide array of choices. A number of Banking and Finance APIs today provide the same utility and services, some implementing them in a different manner, some adopting different technology stacks, but what truly sets these APIs apart is the ease when it comes to consumption.</p>
<p id="07ff" class="">Developers want to get started as soon as possible, spend as little time getting acquainted with the API, and focus more on building creative solutions on top of them. In order for an API to be widely adopted, it must have a great developer experience.</p>
<p id="0ba7" class="">Since Developer Experience is a huge deciding factor when it comes to adopting an API, we sat down and shortlisted 8 popular Banking and Finance APIs and analysed what they have to offer in terms of Developer Experience, and what makes them popular choices amongst developers.</p>
<p id="6fa9" class="">Using the famous Developer Experience checklist as criteria and point of reference, we noticed some common trends and practices, which are objectively summarised in the table below:</p>
<blockquote class="wp-block-quote">
<p>Read in detail what forms the Developer Experience Checklist for APIs: <a href="https://blog.apimatic.io/what-exactly-is-developer-experience-1646b813df14">What exactly is Developer Experience?</a></p>
</blockquote>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:quote /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-663" src="/wp-content/uploads/2021/12/1_buxsZK1nfOKAtciwSwysOg-1.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="19ca" class="">Quickly skimming through the table you would notice that most of these APIs offer a number of components from the Developer Experience checklist, and hence comes as no surprise why they are doing so well. One area we saw FinTech APIs lead, was with offering API implementations in multiple languages, in the form of SDKs, so developers can instantly start making use of these APIs in languages they are comfortable with.</p>
<p id="91fc" class="">We further ran a detailed analysis to find out how these APIs have gone about with their Developer Experience and what sets them apart from each other and remaining of the competition, which you can go through here:&nbsp;<a href="https://blog.apimatic.io/popular-developer-experience-practices-fintech-and-banking-apis-a5474fe535e4"> Popular Developer Experience Practices: FinTech and Banking APIs.</a></p>
<h3 id="8e19"><strong>PSD2 is an Opportunity for Digital Transformation</strong></h3>
<p id="2287" class="">FinTech APIs have built popularity, cashing on the exemplary experiences they provide, both to developers and customers, and Banking APIs that have followed suit have done well. But this is not the case for every bank out there. PSD2, although very explicitly requires banks to open up data and banking functionalities, it does not specify how banks are supposed to meet these requirements, with many just checking them off with bare minimum implementations.</p>
<p id="8b13" class="">Banks that are looking to just adhere to regulatory requirements and not do more, may miss out on big opportunities to expand and grow new business models, and may not be able to put themselves on the map with FinTech APIs.</p>
<blockquote class="wp-block-quote">
<p>According to a survey, only 59% of Europe’s 442 banks met PSD2’s 14th March deadline, to have a publicly available testing facility or a sandbox environment .</p>
</blockquote>
<p id="a963">Of course, it is easier said than done and many banks are still struggling to prepare their APIs, with most of them slacking behind. In order to fulfill legal requirements, the API experience gets second fiddle. While understandable, it leads to a missed opportunity nonetheless</p>
<p id="adf4" class="">With the final 29th September deadline looming ahead, a number of Banking APIs are going to hit the markets, and only the ones that come with a developer experience will catch all the buzz, leaving the rest trailing on traction.</p>
<h2 id="32b5" class="">Automation is the Key to Scaling Developer Experience</h2>
<p id="0227" class="">So where does this leave API teams today who are still working on their API and have no time or resources to work on the consumption part of it?</p>
<p id="8a9a" class="">And the answer lies in&nbsp;<strong>Automation</strong>.</p>
<p id="833d" class="">With all hands busy on deck working on the core functionality of APIs, there is no reason that resources have to be dedicated to just work on producing the artifacts that make APIs easier to consume. Instead, let the machines do the working for you!</p>
<p id="3749">A lot can be done with an API Specification today. The document, when passed through CodeGen engines, can drive entire Developer Experience(DX) for APIs with automatic generation of DX components. And not just Documentation or Portals, but also complex components like SDKs, Code Samples, API Explorers and can even CI/CD pipelines so none of this has to be updated manually.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:quote /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<figure id="attachment_664" aria-describedby="caption-attachment-664" style="width: 800px" class="wp-caption aligncenter"><img class="wp-image-664" src="/wp-content/uploads/2021/12/1_ZE_9hIZFJCH8to2mVeNeig.gif" alt="Generate DX Components with just an API Specification" width="800" height="450"><figcaption id="caption-attachment-664" class="wp-caption-text">Generate DX Components with just an API Specification</figcaption></figure>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="0f4d" class="">Get Started ASAP</h2>
<p id="5df6" class="">Where are you with Developer Experience for your APIs? Pushing for that 29th September Deadline and have no idea where to get started? Don’t worry about it.</p>
<p id="a7bb">Luckily for you, here at APIMatic, this is our specialty. We hold the necessary skills and expertise to help you set up an automated Developer Experience solution, and with our in-house technology, can get you running within weeks!</p>
<p id="f9ff" class="">You can always&nbsp;<a href="https://apimatic.io/contact">reach out to our team</a>&nbsp;to discuss Developer Experience and we’ll help you find an easy way out that fits your need. There’s no reason you have to stay behind and not compete with the top Banking and FinTech APIs of today.&nbsp;<a href="https://apimatic.io/account/register"> Get started&nbsp; </a>as soon as you can!</p>
<p class="">Thanks to&nbsp;Adam DuVander.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/state-of-developer-experience-banking-and-fintech-2019/">State of Developer Experience: Banking and FinTech 2019</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/state-of-developer-experience-banking-and-fintech-2019/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>How to Create SDKs for your API in less than a Minute ⏰</title>
		<link>/blog/how-to-create-sdks-for-your-api-in-less-than-a-minute/</link>
					<comments>/blog/how-to-create-sdks-for-your-api-in-less-than-a-minute/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Mon, 26 Nov 2018 11:27:02 +0000</pubDate>
				<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[SDK]]></category>
		<category><![CDATA[API]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[Sdks]]></category>
		<category><![CDATA[Software Development]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=553</guid>

					<description><![CDATA[<p>Having a quality Developer Experience does not stop at having great API docs. You need to provide client or helper libraries in the form of SDKs (Software Development Kits) to help accelerate the API consumption process. Many API experts and gurus over the years have advocated the importance of shipping out SDKs with APIs, including: [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/how-to-create-sdks-for-your-api-in-less-than-a-minute/">How to Create SDKs for your API in less than a Minute ⏰</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="553" class="elementor elementor-553" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-16a5e6e1 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="16a5e6e1" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-5cc2933e" data-id="5cc2933e" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-1ca8595 elementor-widget elementor-widget-text-editor" data-id="1ca8595" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-554 aligncenter" src="/wp-content/uploads/2021/12/1_NgUaKbvONyap68fNeb11OQ.jpg" alt="How to Create SDKs for your API in less than a Minute using APIMatic" width="800" height="350"></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="74c5" class="">Having a quality Developer Experience does not stop at having great API docs. You need to provide client or helper libraries in the form of SDKs (Software Development Kits) to help accelerate the API consumption process. Many API experts and gurus over the years have advocated the importance of shipping out SDKs with APIs, including:</p>
<blockquote class="wp-block-quote">
<p><a href="https://www.linkedin.com/in/kinlane/">Kin Lane</a>the&nbsp;<a href="https://apievangelist.com/">API Evangelist</a>, for whom SDKs form an important part of the&nbsp;<a href="https://apievangelist.com/2018/07/12/my-api-lifecycle-checklist-and-scorecard/"> Developer Experience checklist.</a></p>
<p><a href="https://www.linkedin.com/in/kvantomme/">Kristof Van Tomme </a>who lists SDKs as one of the&nbsp;<a href="https://nordicapis.com/how-bad-developer-portals-kill-apis/">eight important key features</a>&nbsp;of every successful developer portal.</p>
<p><a href="https://www.linkedin.com/in/duvander/">Adam Duvander</a><strong>,&nbsp;</strong>whose&nbsp;<a href="https://everydeveloper.com/developer-experience/">DX Index</a>&nbsp;comprises 13 separate criteria, each weighted according to importance. At top of the list, lies libraries available in popular languages.</p>
</blockquote>
<p id="e648" class="">It is no longer enough to expose your API endpoints with just the HTTP Docs or API references. You need to attract developers with platforms that are native to them, you need to enable them to comfortably play around with your code, and this is what SDKs help with.</p>
<p id="1305" class=""><mark>In simpler terms, SDKs are like a cockpit for your API, they put your consumers into the driving seat and ensure that they feel powerful and in total control!</mark></p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:quote /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-555 aligncenter" src="/wp-content/uploads/2021/12/1_VupZPPjtjhb2QeaWFQr0jQ.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="c145" class="">Many API Providers after accepting the need of giving out SDKs, ponder over what languages should they offer them in? The golden answer for this is as many as you can. Developers today are working with a number of languages and platforms, the diversity when it comes to adoption of new technology is all time high. According to a survey on&nbsp;<a href="https://www.programmableweb.com/news/what-programming-language-most-popular-apis/2013/06/03"> Programmable web</a>, these are the languages programmers are using the most to consume APIs:</p>
<ol class="">
<li>PHP</li>
<li>Python</li>
<li>Ruby</li>
<li>.NET / C#</li>
<li>Java</li>
<li>Perl</li>
<li>ColdFusion</li>
<li>Node.js</li>
<li>ActionScript</li>
</ol>
<p id="aa4d" class="">Some of these languages may be losing popularity, and new languages are being adopted day by day but the fact still remains that APIs are being consumed in multiple languages and you need to cater the need.</p>
<p id="54ab" class="">Which again gives birth to the question:</p>
<h2 id="97f0" class="">How are you going to create SDKs in all these languages?</h2>
<p id="2d24" class="">While it may seem easy, writing client libraries for an API that you wrote yourself, it’s not so simple. It does not only require hours of redundant labour work but also a number of resources, loads of time and a lot of testing, making SDKs more of a chore. Companies who have the $$$ and resources to build in-house SDKs with language experts are at an advantage, leaving the rest dreaming.</p>
<p id="60c0" class="">Maintaining SDKs is a whole different story. Even companies with huge API teams struggle to update their SDKs on time. APIs tend to evolve and version over time and with every new update, the SDKs go obsolete. Reflecting these changes across SDKs in multiple languages in a way that does not break things is tough, time-consuming work.</p>
<p id="8a6b" class=""><mark>Simple maths reveal that around 83% of the total SDK cost comes from keeping it up to date and bug-free after every API update.</mark></p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:list /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-556 aligncenter" src="/wp-content/uploads/2021/12/1_1cyAbmzqIEDsFn6W2GIf0A.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="9cff" class="">Its safe to assume that in order to write a single SDK, a developer who is proficient enough to write idiomatic code is required full time. Assuming the developer takes a week to build and test that SDK on a pay rate of $46/hour (bls.gov), then the cost turns out to be $1,852 for SDK in one language.</p>
<p id="67a2" class="">Cost of maintaining an SDK although depends on many variables like how frequent the API is changed or what’s the size of the library. For the sake of simplicity let’s assume it takes two days a month on average for a developer to maintain an SDK. With same cost assumptions, the burn turns out to be $8,885 for maintaining a single SDK over a year. Summing up both building and maintenance cost gives us a figure of $11,000 per API per SDK per language.</p>
<p id="e055" class="">Multiply this by the number of languages or APIs, we’re looking at sizeable costs, for just manually writing and maintaining SDKs.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-557 aligncenter" src="/wp-content/uploads/2021/12/1_Czg0DEbC41Fx0Az2AaEU4g.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="2b93" class="">Not to mention the delays in time-to-market caused by making changes in API(s), reflecting them in Client libraries, checking for breaking changes and finally releasing updated documentation.</p>
<p id="2bec" class="">The SDK dream with all the $$$ and effort involved turns into an SDK nightmare. With many even questioning their worth and value.</p>
<blockquote class="wp-block-quote">
<p><em>“Necessity is the mother of Invention”</em></p>
</blockquote>
<p id="5197">Over years scientists and engineers have worked hard to replace redundant work with automation, that’s how the first wheels, machines and engines were made.</p>
<p id="c8ad">And as soon a need was recognized to automate the laborious process of creating SDKs, birth was given to code generators for APIs.</p>
<h2 id="afce">What are Code Generators?</h2>
<p id="69eb" class="">Code Generators are the engines which enable automatic generation of SDKs. They have now been around for some years but are still a new concept in the API space. The objective is to use your API Specification as a single source of truth to derive fully working functional SDKs out of them in minutes.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:quote /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-558 aligncenter" src="/wp-content/uploads/2021/12/1_FLECCuyGQLDzoeCoxHdYCA.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="faa4" class="">The APIMatic CodeGen Engine takes in an API Specification in any format (Swagger/OpenAPI, RAML, API Blueprint etc.), and spews out fully functional SDKs, complete with:</p>
<ul class="">
<li>Client Libraries</li>
<li>Dynamic Code Samples</li>
<li>Documentation</li>
<li>Getting Started Guides</li>
</ul>
<p id="b2d9">And all of that in a variety of programming languages!</p>
<p id="7fb8">Unlike every piece of revolutionary technology in history, CodeGen Engines have amassed a number of critics and sceptics, who argue how something so complex can be achieved in minutes like that. Good thing for us, it is science, not magic. And every concept of science has an explanation to it.</p>
<p id="f6bc">Here’s what we do to generate SDKs automatically for you:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:list /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-559 aligncenter" src="/wp-content/uploads/2021/12/1_yD9ALr6xQvOo3aD0Rg6GXg-1-1024x630.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:list -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<ol class="">
<li>Take API Description in any popular format</li>
<li>Convert it to our Standard Description Language (SDL) or the APIMatic format</li>
<li>Run a series of validations</li>
<li>Loop different parts of the API description and generate code representations</li>
<li>Convert important entities from an API Description to SDK.</li>
<li>Generate an HTTP abstraction layer to wrap the HTTP client</li>
<li>Generate one or more helper class files to abstract out a lot of the common code from the SDK</li>
<li>Provide a client library interface to wrap the SDK and make it easier to use.</li>
<li>Generate language or platform-dependent files, such as gemspec, Gemfile and Rakefile are generated for Ruby SDKs</li>
<li>Generate Readme files, Getting Started Guides, Code Samples and Documentation</li>
<li>Package everything in zip files ready to be deployed on GitHub or designated repos</li>
</ol>
<p id="0517" class="">Now all of that may sound like a really complicated process, but we believe API Providers should not be worrying about this. APIMatic is here to do the hard work, we are here to produce fully functioning quality SDKs, and to achieve all of this from signup to your first SDK Generation,&nbsp;<strong>take up less than a minute</strong>. Use APIMatic’s CodeGen API to build the engine into your CI/CD pipeline and never worry about updating SDKs ever again!</p>
<p id="59af" class="">Another question that bugs many providers is what if they want their SDKs to follow certain conventions. Luckily they do not have to worry, APIMatic’s CodeGen Engine does not produce generic, one fit all SDKs. With our CodeGen settings, we allow providers to chose what works or does not work for them such as</p>
<ol class="">
<li>Automatic appending of JSON accept and content-type headers</li>
<li>Allowing skipping of SSL Certificate validation</li>
<li>Setting timeouts for endpoint calls</li>
<li>Perform linting</li>
</ol>
<p id="4c14" class="">Furthermore, we can make more customisations to the engine and mould it to the specific requirement of providers as a premium offering.</p>
<p id="94bd">APIMatic’s CodeGen Service is more than just a Code Generator, it’s an entire platform. Where you can</p>
<ol class="">
<li>Maintain, edit and manage different version of API specifications</li>
<li>Publish generated SDKs on Github or package repositories</li>
<li>Host SDKs on completely customisable Developer Portals, complimented with Reference Docs Live and Dynamic Code Samples</li>
</ol>
<p id="5a60" class="">Not sure how you can build in the API Code Engine to your pipeline? Reach out to us today to book a Demo!</p>
</div>
</div>
</div>
</div>
<!-- /wp:list -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:list /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:list /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/how-to-create-sdks-for-your-api-in-less-than-a-minute/">How to Create SDKs for your API in less than a Minute ⏰</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/how-to-create-sdks-for-your-api-in-less-than-a-minute/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>What Exactly is Developer Experience?</title>
		<link>/blog/what-exactly-is-developer-experience/</link>
					<comments>/blog/what-exactly-is-developer-experience/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Wed, 12 Sep 2018 12:34:16 +0000</pubDate>
				<category><![CDATA[API Documentation]]></category>
		<category><![CDATA[API Portal]]></category>
		<category><![CDATA[Company]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[API Event]]></category>
		<category><![CDATA[API Meetup]]></category>
		<category><![CDATA[WTD San Francisco]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=1103</guid>

					<description><![CDATA[<p>Write the Docs is a global community of people who care about documentation. They boast a Slack network of thousands of members and are physically present on 3 continents where they conduct regular meet-ups. Our team ran into some members of the San Francisco Chapter earlier in the summer, and an arrangement was made for [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/what-exactly-is-developer-experience/">What Exactly is Developer Experience?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="1103" class="elementor elementor-1103" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-43cc30fb elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="43cc30fb" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-6525236e" data-id="6525236e" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-759f3cca elementor-widget elementor-widget-text-editor" data-id="759f3cca" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<figure class="graf graf--figure">
<p class="mod-reset"><img class="aligncenter wp-image-1196 size-full bg-img bg-img-1" src="/wp-content/uploads/2021/12/Thedeveloperexperienceforapis-01-1.png" alt="" width="800" height="350"></p>
<p class="graf graf--p"><a class="markup--anchor markup--p-anchor" href="https://www.writethedocs.org/" target="_blank" rel="noopener" data-href="https://www.writethedocs.org/">Write the Docs</a> is a global community of people who care about documentation. They boast a <a href="https://www.writethedocs.org/slack/">Slack network</a> of thousands of members and are physically present on 3 continents where they conduct regular meet-ups.</p>
<p class="graf graf--p">Our team ran into some members of the <a class="markup--anchor markup--p-anchor" href="https://www.meetup.com/Write-the-Docs-SF/" target="_blank" rel="noopener" data-href="https://www.meetup.com/Write-the-Docs-SF/">San Francisco Chapter</a> earlier in the summer, and an arrangement was made for Nauman, our Product Manager to speak at their latest meet-up. With this talk, we aimed to introduce<strong class="markup--strong markup--p-strong"> the latest practices in API Documentation and explain what Developer Experience is for APIs.</strong></p>

<blockquote class="graf graf--pullquote graf--startsWithDoubleQuote">“….APIs are not only for savvy developers or tech companies”</blockquote>
<p class="graf graf--p">The talk started off with how APIs are slowly taking over the world, and how it has become important for every business to have an API. The cyberspace is changing rapidly, and just like it was important for businesses to have a website a few years back, it’s important for them to have an API today to exist and stay relevant.</p>
<p class="graf graf--p">APIs are not as easy to interact with and require prior documentation and know-how for third-party interactors to deal with, in the case of APIs, the third-party interactors being developers, which brings us to the concept of Developer Experience.</p>

<h2 class="graf graf--h4">What Exactly is Developer Experience?</h2>
<p class="graf graf--p"><strong class="markup--strong markup--p-strong">Developer Experience (DX) is the equivalent of User Experience (UX) when it comes to a developer.</strong></p>
<p class="graf graf--p">It is a concept often referenced in the API world and rightly so. APIs are complex structures and unless you properly explain what your API does, nobody is ever going to use it. In fact, the value of your API and the usage is something that directly depends on your Developer Experience.</p>
<p class="graf graf--p">Developers are the lifeblood of an API economy and until it is made easy for them to access and play around with your API, it may never really see success.</p>
<p class="graf graf--p">A great Developer Experience is when even novice developers come to your API and require minimum onboarding time, no handholding, and achieve maximum satisfaction. Here, the <strong class="markup--strong markup--p-strong">3:30:3 Rule is applied </strong>which a developer coming in of any experience should take:</p>

<ul class="postList">
 	<li class="graf graf--li"><strong class="markup--strong markup--li-strong">3 seconds to understand what your API does</strong></li>
 	<li class="graf graf--li"><strong class="markup--strong markup--li-strong">30 seconds to understand the required functionality</strong></li>
 	<li class="graf graf--li"><strong class="markup--strong markup--li-strong">3 minutes to be up and running</strong></li>
</ul>
<p class="graf graf--p">This should be the end goal of your entire Developer Experience campaign. These are the metrics you should measure your efforts against at end of the day. Companies like Stripe and Twilio have come close to this and have found massive success with their APIs.</p>

<h2 class="graf graf--h4">What Constitutes a Great Developer Experience?</h2>
<p class="graf graf--p">Great Developer Experience can be achieved with the help of the following components:</p>

<ul class="">
 	<li class="graf graf--blockquote">Getting Started Guides</li>
 	<li class="graf graf--blockquote">Client Libraries</li>
 	<li class="graf graf--blockquote">API Console</li>
 	<li class="graf graf--blockquote">Code Samples</li>
 	<li class="graf graf--blockquote">FAQs</li>
 	<li class="graf graf--blockquote">Change Logs</li>
 	<li class="graf graf--blockquote">Dashboard(Monitoring and Reporting)</li>
 	<li class="graf graf--blockquote">Authentication</li>
</ul>
<p class="graf graf--p">It is essential to take the correct steps and measures throughout your API Lifecycle to ensure you end up providing a great experience. You can read in detail about the best practices you can <a href="https://apimatic.io/blog/2018/03/building-rest-apis-the-right-way/">follow throughout your API lifecycle</a>.</p>

<div class="graf graf--mixtapeEmbed">
<p class="mod-reset">Your primary focus should be on getting your specification right and how that will drive your entire API Program. No matter what specification you are comfortable with, OpenAPI, RAML, or API Blueprint, you can convert back and forth as many times as you like with the API Transformer and can even integrate the Transformer API in your CI/CD cycle to convert specs on the go.</p>

</div>
<p class="graf graf--p">Coming to the consumption part, Twilio, Stripe, Algolia, and other API companies achieved their success by making their APIs super easy to consume. However, it is important to note that, for all of these companies, APIs are the bread and butter and they can afford to spend their entire resources towards a better Developer Experience. But traditional companies like banks, airlines, and telcos that are recently jumping into the API space or are opening up their API to wider audiences, may necessarily not have the expertise or the knowledge to pull of something similar.</p>
<p class="graf graf--p">But that does not have to be the case anymore and that’s where APIMatic comes in. With us, you can produce everything that makes it easy for developers to consume APIs. You can provide a Developer Experience only parallel to the best in the industry. And all of that with the least of effort (in minutes) and least of resources. All you need to do is manage and maintain a specification, and let us do the rest.</p>

<blockquote class="graf graf--blockquote graf--hasDropCapModel">Don&#8217;t miss reading APIMatic&#8217;s philosophy behind automating the developer experience:<a class="markup--anchor markup--mixtapeEmbed-anchor" title="https://blog.devapi.dream.press/introducing-portals-that-speak-your-devs-language-bac82a8c573f" href="https://apimatic.io/blog/2018/01//developer-experience-beyond-api-docs" data-href="https://blog.devapi.dream.press/introducing-portals-that-speak-your-devs-language-bac82a8c573f">Introducing Portals That Speak Your Devs Language</a></blockquote>
<p class="graf graf--p">We’d like to throw a special thanks to <a class="markup--anchor markup--p-anchor" href="https://www.linkedin.com/in/moniquesemp" target="_blank" rel="noopener" data-href="https://www.linkedin.com/in/moniquesemp">Monique</a>, for doing such a superb job organizing the event and <a class="markup--anchor markup--p-anchor" href="https://www.linkedin.com/in/richmattiello/" target="_blank" rel="noopener" data-href="https://www.linkedin.com/in/richmattiello/">Richard</a> for recording all the videos.&nbsp;</p>
</figure>						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/what-exactly-is-developer-experience/">What Exactly is Developer Experience?</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/what-exactly-is-developer-experience/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Evolution of Developer Experience Portal UI: Case Study</title>
		<link>/blog/evolution-of-developer-experience-portal-ui-case-study/</link>
					<comments>/blog/evolution-of-developer-experience-portal-ui-case-study/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Thu, 29 Mar 2018 11:02:52 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Case Study]]></category>
		<category><![CDATA[Design]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[UI]]></category>
		<category><![CDATA[UX]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=606</guid>

					<description><![CDATA[<p>Developer Experience (DX) is the equivalent of User Experience (UX) when it comes to a developer. It’s essentially the experience, a developer goes through when making use of software products like APIs, SDKs, Client libraries, and other such tools and services. At APIMatic, we wanted to streamline the API consumption process and put all our [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/evolution-of-developer-experience-portal-ui-case-study/">Evolution of Developer Experience Portal UI: Case Study</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="606" class="elementor elementor-606" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-7edabedc elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="7edabedc" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-3d479293" data-id="3d479293" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-97f2514 elementor-widget elementor-widget-text-editor" data-id="97f2514" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-607 aligncenter" src="/wp-content/uploads/2021/12/1_4wuljh250HKrgRLOl5MTEA-1024x576.png" alt="Evolution of Developer Experience Portal UI: Case Study" width="1024" height="576"></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="3fde" class=""><strong>Developer Experience (DX) is the equivalent of User Experience (UX) when it comes to a developer.</strong></p>
<p id="dbc8" class="">It’s essentially the experience, a developer goes through when making use of software products like APIs, SDKs, Client libraries, and other such tools and services. At APIMatic, we wanted to streamline the API consumption process and put all our efforts into the <a href="https://www.apimatic.io/developer-experience-portal/"> Developer Experience Portal</a>to achieve that.</p>
<p id="91bc" class="">There are a number of services that can generate either SDKs, Documentation, or some other sort of help material to make APIs easy to work with. But none that consolidates it all on a single platform like our Developer Experience Portal. It’s a one-stop all solution for all your API needs, including SDKs in multiple languages, Language Specific Documentation, Reactive Code Samples, Test Cases, CI/CD integrations, Package publishing, and on top of that a beautiful, navigable 3 column UI, which is a pleasure to work with.</p>
<p id="e5f8" class="">Design and usability are not something people talk about when building products for developers, but the design is more than just aesthetics, it’s about effectively delivering your functionality to the end-users.</p>
<p id="baa1" class="">In this blog, we’ll discuss the thought process behind the design of our Developer Experience Portal, what we built and how we put it into existence.</p>
<h2 id="11f8" class=""><strong>Adding Developer Experience Portal into Existing Information Architecture&nbsp;</strong>(IA)</h2>
<p id="b400" class="">Adding the developer experience portal into our existing information architecture was the first step. Information architecture helps bring everyone in the team on the same page — from the stakeholders giving requirements to the design team, the dev guys, and the ones who are testing everything.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<div class="wp-block-image">
<figure class="aligncenter size-large">
<figure id="attachment_608" aria-describedby="caption-attachment-608" style="width: 700px" class="wp-caption aligncenter"><img class="wp-image-608" src="/wp-content/uploads/2021/12/1_AnH56mPLKQmg9L8myI5Usw.jpg" alt="DX Portal Information Architecture" width="700" height="631"><figcaption id="caption-attachment-608" class="wp-caption-text">DX Portal Information Architecture</figcaption></figure>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="9c33" class=""><strong>Making a Basic Wireframe</strong></h2>
<p id="38b4" class="">After the information structure was updated, wireframes for the DX portal had to be made. A couple of brainstorming sessions and paper mock-up iterations helped in making basic wireframes for the portal — thanks to the dev team.</p>
<p id="0652">In this case study, my focus is going to be only on the documentation page. This is the wireframe that we came up with for the said page.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<div class="wp-block-image">
<figure class="aligncenter size-large">
<figure id="attachment_609" aria-describedby="caption-attachment-609" style="width: 700px" class="wp-caption aligncenter"><img class="wp-image-609" src="/wp-content/uploads/2021/12/1_4ZUiP2bes34tucmPsnp0jA.jpg" alt="Basic Wireframe" width="700" height="616"><figcaption id="caption-attachment-609" class="wp-caption-text">Basic Wireframe</figcaption></figure>
<figcaption></figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="1c71" class="">Converting Wireframes to Mock-ups</h2>
<p id="4f8f">Based on ground level information, we got the wireframes. Beauty of a good UX process is that it is incremental in nature. So, you get really excited at every iteration but still keep iterating till you get the most stable form.</p>
<p id="bead">Wireframes are there to get you started. Don’t put extra effort to get the perfect information/requirements in the beginning. Specially in a fast paced company where you need to rapidly prototype and ship features as early as possible.</p>
<p id="01e2" class="">Moving on…we converted the wireframe into a mock-up without bothering too much about the design at this stage. The first step is to place all the elements pointed out in the wireframe and add some basic colors to it.</p>
<p id="7baa" class="">Since product design is an iterative process, we toned down the wireframe to implement a basic version of the mock-up — stripping out some of the items visible in the wireframe. Like the search bar, the navigation bar with API Name and other information, the navigation bar with the breadcrumbs and version information. All this was planned to be added in a later iteration.</p>
<p id="fa53" class="">So, this is the initial mock-up that we ended up with after wireframe conversion.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-610 aligncenter" src="/wp-content/uploads/2021/12/1_6W1S3Mp3Mop8OgArADVKUA-1024x542.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="1756" class="">Mock-up<strong>&nbsp;Testing is a Thing</strong></h2>
<p id="84b8" class="">Testing is usually referred to a running software. However, it’s a pretty important step in the design process. Testing mock-ups saves a lot of time and cost. A visually beautiful but functionally disastrous mock-up can get initial approval in no time but can become a serious bottleneck during development.</p>
<p id="024c" class="">So we just propagated the first mock-up within the team to get feedback — not about the design, but about the features it included.</p>
<p id="45fb" class="">Based on feedback and secondary brainstorming, we got rid of some unnecessary elements and took care of some other requirements. A better cleaner version was achieved.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-611 aligncenter" src="/wp-content/uploads/2021/12/1_jXA2SpWL9dKlrH7gG8Dx5g-1024x953.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="dd13" class="">Few basic UI tricks pretty much worked but we came across other few functionalities that our mock-up lacked. For example, Transformer is another feature that allows users to convert and export their API specifications into a number of formats. We needed to somehow add that into the mock-up too.</p>
<p id="6f44" class="">We also noticed that all languages listed were competing against each other visually. The increasing weight of the selected element does the work but it’s better to lower down the opacity of the remaining elements. This not only makes the selected element prominent but also lowers down the overall weight.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-612 aligncenter" src="/wp-content/uploads/2021/12/1_tzlc2gJ4Hud-ZcK30yG7Gg-1024x245.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class="">While we were still in the process of testing the mock-ups, we came across the requirement that there were templates against every language that was to be available for selection. Therefore, we needed to add a selection hierarchy to the mock-up as well. So, we added templates and a secondary selection stripe and removed the space above the languages listing, which wasn’t being utilized.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<figure id="attachment_613" aria-describedby="caption-attachment-613" style="width: 1024px" class="wp-caption aligncenter"><img class="wp-image-613" src="/wp-content/uploads/2021/12/1_hpDekSqcTkMKN4p4i46vWQ-1024x245.jpg" alt="Templates added" width="1024" height="245"><figcaption id="caption-attachment-613" class="wp-caption-text">Templates added</figcaption></figure>
</figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<figure id="attachment_614" aria-describedby="caption-attachment-614" style="width: 1024px" class="wp-caption aligncenter"><img class="wp-image-614" src="/wp-content/uploads/2021/12/1_IXZobuxTyQBXi0T-IqICMA-1024x314.jpg" alt="Top Navbar added" width="1024" height="314"><figcaption id="caption-attachment-614" class="wp-caption-text">Top Navbar added</figcaption></figure>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="1ed7" class=""><strong>Reiterations and Design Improvements</strong></h2>
<p id="1ff1" class="">We, at APIMatic, believe in constantly improving our products. Soon the team took the decision to add some additional features to the portal and that required some massive changes to the UI. An all-new API console and Reactive Code Samples were the biggest reason behind that massive overhaul. We didn’t waste any time and to accommodate the new requirements, we moved from the fixed-width design we already had and decided to go with the full width one. We also improved the left navigation and the overall typography of the portal.</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-615 aligncenter" src="/wp-content/uploads/2021/12/1_qr_fV2S7odipEfAM-lWq_A.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-616 aligncenter" src="/wp-content/uploads/2021/12/1_jsgpiwdAP_6mFkktSeLFBA.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="8b1a">At this point, we were quite satisfied with the results but kept on questioning our design like how to make it sleeker as well as more functional.</p>
<p id="9367" class="">Eventually, we realized that we were using too many navigation bars on top. Four navigation bars sound even more ridiculous than it seems. We tried to minimize that in our next iteration by putting languages into a drop-down and listing templates next to the drop-down.</p>
<p id="00d4" class="">We decided to get rid of the language icons again as they were taking a lot of space.</p>
<p id="42e1" class="">Furthermore, the Download SDK and Export buttons were placed on the same bar. The breadcrumb bar was also taking space and it wasn’t very useful as there was only one navigable page before it.</p>
<p id="d998" class="">So, to tackle that we converted that into a home button and put it on top. Version selection was also shifted to the top bar.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-617 aligncenter" src="/wp-content/uploads/2021/12/1_XH_oE_6jPJJC6bDlgSvyRg-1024x233.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class="">Another thing that was bothering the users and us as well, was the console and the code samples being in the same column. On smaller screens, both appeared very congested and using the console with such a small height was really a bad experience.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:image -->
<div class="wp-block-image">
<figure class="aligncenter size-large">
<figure id="attachment_618" aria-describedby="caption-attachment-618" style="width: 680px" class="wp-caption aligncenter"><img class="wp-image-618" src="/wp-content/uploads/2021/12/1_5Xhq5UhbYeMAd-4LIACuWA.jpg" alt="Scrolling through console and code with such limited space was a hassle" width="680" height="675"><figcaption id="caption-attachment-618" class="wp-caption-text">Scrolling through console and code with such limited space was a hassle</figcaption></figure>
<figcaption></figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p>We decided to place the console in the center column which gave a lot of breathing space for both.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-619 aligncenter" src="/wp-content/uploads/2021/12/1_rAtQQHHlkuzhyX8e4aJ2XQ.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-621 aligncenter" src="/wp-content/uploads/2021/12/1_31zYlt0J8kx29z1vjS0Dlw-1-1024x630.png" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p>Following is the form we got after putting the console in the middle column. We also gave a makeover to the “TRY IT OUT” and “COPY” buttons on the bottom right.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-622 aligncenter" src="/wp-content/uploads/2021/12/1_SDcZ4fTeCx0eSsD5RHPThw-1024x576.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:heading -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<h2 id="f141"><strong>Conclusion</strong></h2>
<p id="ac9c" class="">Once you’ve released a feature, you make design and flow decisions based on how people are using it. We use a tool that provides us with real-time user interactions. It enables us to see how people are interacting with our product. It is really helpful in making design and flow decisions and helped us improve upon the design of our product.</p>
<p id="7830" class="">We are glad to be moving in the right direction with our UI and intend to keep on improving the UX and the DX of our products. We believe in the concept of making things easier for developers and always design our products accordingly.</p>
<p id="d043" class="">&nbsp;</p>
</div>
</div>
</div>
</div>
<!-- /wp:heading -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/evolution-of-developer-experience-portal-ui-case-study/">Evolution of Developer Experience Portal UI: Case Study</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/evolution-of-developer-experience-portal-ui-case-study/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Developer Experience Beyond API Docs</title>
		<link>/blog/developer-experience-beyond-api-docs/</link>
					<comments>/blog/developer-experience-beyond-api-docs/#respond</comments>
		
		<dc:creator><![CDATA[Adeel Ali]]></dc:creator>
		<pubDate>Tue, 30 Jan 2018 10:49:43 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[DX]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=1119</guid>

					<description><![CDATA[<p>If you talk to a man in a language he understands, that goes to his head. If you talk to him in his language, that goes to his heart — Nelson Mandela May I ask you to name a few APIs with a phenomenal developer experience? I have asked this question many times, and the answer was [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/developer-experience-beyond-api-docs/">Developer Experience Beyond API Docs</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="1119" class="elementor elementor-1119" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-578a6865 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="578a6865" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-55e7fa5b" data-id="55e7fa5b" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-673fe4c4 elementor-widget elementor-widget-text-editor" data-id="673fe4c4" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<figure class="graf graf--figure graf--layoutOutsetCenter">
<p class="mod-reset"><img class="graf-image aligncenter" src="/wp-content/uploads/2021/12/1DqDR8CtrlY_H0hYt9LAI7A.png" data-image-id="1*DqDR8CtrlY_H0hYt9LAI7A.png" data-width="1207" data-height="721" data-is-featured="true"></p>
</figure>
<blockquote class="graf graf--blockquote"><em class="markup--em markup--blockquote-em">If you talk to a man in a language he understands, that goes to his head. If you talk to him in his language, that goes to his heart — Nelson Mandela</em></blockquote>
<p class="graf graf--p">May I ask you to name a few APIs with a phenomenal developer experience? I have asked this question many times, and the answer was hardly any different. There is a reason why <a class="markup--anchor markup--p-anchor" href="https://www.twilio.com/docs/libraries" target="_blank" rel="noopener" data-href="https://www.twilio.com/docs/libraries">Twilio</a>, <a class="markup--anchor markup--p-anchor" href="http://algolia.com/doc/api-client/csharp/getting-started" target="_blank" rel="noopener" data-href="http://algolia.com/doc/api-client/csharp/getting-started">Algolia</a>, <a class="markup--anchor markup--p-anchor" href="https://stripe.com/docs/api/python" target="_blank" rel="noopener" data-href="https://stripe.com/docs/api/python">Stripe</a>, etc. are loved and accessed by millions of developers. While the majority of API portals are limited to HTTP Docs and API reference, you’ll find the best ones taking the developer experience way beyond that. They do so by:</p>

<ol class="postList">
 	<li class="graf graf--li">Freeing up their developers from redundant tasks, i.e., provide SDKs/Helper libraries, tutorials, code samples, test cases and other features to make API consumption very simple.</li>
 	<li class="graf graf--li">Speaking the language of their developers, i.e., they keep everything from simple How-Tos to intricate SDKs in languages their developers love to code in.</li>
</ol>
<figure class="graf graf--figure graf--layoutOutsetCenter">

<figure style="width: 1200px" class="wp-caption aligncenter"><img class="graf-image" src="/wp-content/uploads/2021/12/1uaLklt0-g6L31Xy68GFIYA.png" alt="The Common Developer Experience Ingredients Found Among&nbsp;APIs" width="1200" height="649" data-image-id="1*uaLklt0-g6L31Xy68GFIYA.png" data-width="1275" data-height="690"><figcaption class="wp-caption-text">The Common Developer Experience Ingredients Found Among&nbsp;APIs</figcaption></figure>

<figcaption class="imageCaption"></figcaption></figure>
<p class="graf graf--p">However, providing a great experience and serving a variety of developer communities is easier said than done. API owners typically need a team of language experts, technical writers, and software testers to begin with. Still, the time to market after every API update and keeping things in sync take ages. A reason that great API portals are still rare to find. We, at APIMatic, believe that this problem can be solved by maintaining a machine-readable description of an API and let automation taking care of the rest.</p>

<blockquote class="graf graf--blockquote"><em class="markup--em markup--blockquote-em">One of the biggest killers of productivity is redundancy. By performing the same task multiple times, you are not only wasting time, but you are also undermining creativity and ingenuity &#8211; </em><a class="markup--anchor markup--blockquote-anchor" href="http://www.strategicofficesupport.com/reduce-redundancy/" target="_blank" rel="noopener" data-href="http://www.strategicofficesupport.com/reduce-redundancy/">Kathrine Farris</a></blockquote>
<h2 class="graf graf--h3">Enhancing Developer Experience via Automation</h2>
<blockquote class="graf graf--pullquote">Automation works on a simple principle — keep humans focused on what’s creative, and delegate to machines what’s redundant.</blockquote>
<p class="graf graf--p">APIMatic mission is no different — using automation to delegate the redundant work to machines, we want developers to solely focus on what’s unique and creative. APIMatic’s <a class="markup--anchor markup--p-anchor" href="https://www.apimatic.io/continuous-code-generation/" target="_blank" rel="noopener" data-href="https://devapi.dream.press/code-generation-as-a-service">Code Generation As A Service</a> has been a great <a class="markup--anchor markup--p-anchor" href="https://apimatic.io/blog/2016/06/automate-all-the-things-how-dude-solutions-saved-20-000-in-development-costs-using-apimatic-f9c05118f041" target="_blank" rel="noopener" data-href="https://blog.devapi.dream.press/automate-all-the-things-how-dude-solutions-saved-20-000-in-development-costs-using-apimatic-f9c05118f041">success</a> for continuously integrating internal APIs. Today we’re taking our mission to the next level by <a class="markup--anchor markup--p-anchor" href="https://www.apimatic.io/developer-experience-portal/" target="_blank" rel="noopener" data-href="https://devapi.dream.press/developer-experience-portal"><em class="markup--em markup--p-em">introducing API portals</em></a> that are automatically generated using an API description. Not only the HTTP docs but also with features-packed SDKs, language-specific docs &amp; tutorials, reactive code snippets, test cases, and API transformations. These components — by taking care of repetitive problems — can become a dev’s best friend, as you&#8217;ll find in a <a class="markup--anchor markup--p-anchor" href="http://www.creativebloq.com/web-design/apis-developers-need-know-121518469" target="_blank" rel="noopener" data-href="http://www.creativebloq.com/web-design/apis-developers-need-know-121518469">compilation of 15 great APIs</a>.</p>

<blockquote class="graf graf--blockquote">These and other APIs will help you supercharge your abilities. With repetitive problems taken care of, you’ll be free to focus on the part of your job that only you can perform — Adam DuVander</blockquote>
<h2 class="graf graf--h3">What’s Different From Other Docs Solutions?</h2>
<p class="graf graf--p">There exist over 30 solutions to document your APIs, so why create a new one? The answer lies in the fact that the existing portal solutions are great in providing generic content with attractive themes, but the generated portals are not as comprehensive as listed in the table above. More importantly, the developer-engagement content (such as SDKs, Code Samples) is either missing or requires manual efforts (imagine documenting the authentication flows for the developers of +10 languages). Thanks to the code-generation engine of APIMatic, we are able to offer a distinct and customizable solution that covers both generic and developer-specific content. The notable components of the portal are the following:</p>

<figure class="graf graf--figure graf--layoutOutsetCenter">
<p class="mod-reset"><img class="graf-image aligncenter" src="/wp-content/uploads/2021/12/1P9eqlQHMW_-0RxfgyV3F3A.png" data-image-id="1*P9eqlQHMW_-0RxfgyV3F3A.png" data-width="1255" data-height="759"></p>
</figure>
<ol class="postList">
 	<li class="graf graf--li"><strong class="markup--strong markup--li-strong">SDKs for a variety of platforms:</strong> Developers love SDKs / Client Libraries — simply because SDKs lift heavy burden of communication with an API, and let developers focus on app design and business logic.</li>
 	<li class="graf graf--li"><strong class="markup--strong markup--li-strong">API Console</strong>: Try out the API right from the docs using your input.</li>
 	<li class="graf graf--li"><strong class="markup--strong markup--li-strong">Reactive Code Samples</strong>: The quickest way to the first hello world. Get a complete running sample code in your language containing no dummy or static content. <a class="markup--anchor markup--li-anchor" href="https://docs.apimatic.io/publish-apis/api-console" target="_blank" rel="noopener" data-href="https://docs.devapi.dream.press/developer-experience-portal/api-console/">Learn More</a>.</li>
 	<li class="graf graf--li"><strong class="markup--strong markup--li-strong">HTTP &amp; Language Specific Docs:</strong> API reference in HTTP and web/mobile languages to take your API to all major developer communities.</li>
</ol>
<figure class="graf graf--figure graf--layoutOutsetCenter">
<p class="mod-reset"><img class="graf-image aligncenter" src="/wp-content/uploads/2021/12/1gEa8ivH2mXPUbMTD-Q5h1Q.png" data-image-id="1*gEa8ivH2mXPUbMTD-Q5h1Q.png" data-width="1255" data-height="759"></p>
</figure>
<p class="graf graf--p"><strong class="markup--strong markup--p-strong">5. Custom Sections/Guides:</strong> Help your audience by adding custom sections or guides to your portal.</p>
<p class="graf graf--p"><strong class="markup--strong markup--p-strong">6. API Export in over 15 formats:</strong> Transform your API description in a format of your choice. Benefit from a wide range of tools available associated with any format, not just one.</p>
<p class="graf graf--p"><strong class="markup--strong markup--p-strong">7. Deploy on Github, or Publish Packages:</strong> Don&#8217;t want to download SDKs and compile by yourself? You may deploy the code at Github, or <a class="markup--anchor markup--p-anchor" href="https://docs.apimatic.io/generate-sdks/publishing-a-package" target="_blank" rel="noopener" data-href="https://docs.devapi.dream.press/developer-experience-portal/Adding%20Packages%20to%20Portal/">publish compiled packages</a> at respective language repositories.</p>
<p class="graf graf--p"><strong class="markup--strong markup--p-strong">8. Tailored Tutorials</strong>: No more manual technical writing and static/outdated screenshots for your API docs.</p>
<p class="graf graf--p"><strong class="markup--strong markup--p-strong">9. Usage Instructions in major IDEs: </strong>Make your developers feel at home by providing everything in their favorite development environment. All major IDEs are supported.</p>

<h2 class="graf graf--h3">Host New, or Embed in Your Existing&nbsp;Portal</h2>
<p class="graf graf--p">From the portal design to hosting and white-labeling, we cover everything. However, you might have invested a lot of effort in your current API portal, and love its design and content. The good news is that you can retain all of your hard work, and still enhance the developer experience of your portal via <em class="markup--em markup--p-em">embeddable DX</em> components. <a class="markup--anchor markup--p-anchor" href="https://docs.apimatic.io/publish-apis/embedding-your-portal" target="_blank" rel="noopener" data-href="https://docs.devapi.dream.press/developer-experience-portal/embedding-your-portal/">Learn More</a></p>

<figure class="graf graf--figure graf--layoutOutsetCenter">

<figure style="width: 1200px" class="wp-caption aligncenter"><img class="graf-image" src="/wp-content/uploads/2021/12/1dT7UQ04FoeOkh2rItokGPw.png" alt="The DX components being embedded into an existing&nbsp;portal" width="1200" height="701" data-image-id="1*dT7UQ04FoeOkh2rItokGPw.png" data-width="1208" data-height="706"><figcaption class="wp-caption-text">The DX components being embedded into an existing&nbsp;portal</figcaption></figure>

<figcaption class="imageCaption"></figcaption></figure>
<h2 class="graf graf--h3">The best of 2 &amp; 3 Column&nbsp;Designs</h2>
<p class="graf graf--p">The trendy 3-column portal designs are great to depict code separately to the text, while the classic 2-column ones are good to document guides and general content. We&#8217;re bringing the best of both in a single portal. <a class="markup--anchor markup--p-anchor" href="https://www.apimatic.io/apidocs/apimatic/v/1_0#/http/api-endpoints/code-generation-external-files/generate-sdk-via-file" target="_blank" rel="noopener" data-href="https://devapi.dream.press/api-docs/cgaas-api">Have a look by yourself</a>.</p>

<h2 class="graf graf--h3">An API to Continuously Update Your&nbsp;Portals</h2>
<p class="graf graf--p">API changes are inevitable, but reflecting those changes to your published portal is typically a nightmare. A reason <a class="markup--anchor markup--p-anchor" href="https://www.apimatic.io/apidocs/apimatic/v/1_0#/http/api-endpoints/documentation-generation/json-docs" target="_blank" rel="noopener" data-href="https://devapi.dream.press/apidocs/dx-portal-api">we’ve built an API</a> to help you integrate the portal generation within your CI/CD pipeline. Now make API changes as often as you like, and get a refreshed portal ready, instantly. <a class="markup--anchor markup--p-anchor" href="https://www.apimatic.io/apidocs/apimatic/v/1_0#/http/how-to-get-started" target="_blank" rel="noopener" data-href="https://devapi.dream.press/apidocs/dx-portal-api">Learn More</a>.</p>

<h2 class="graf graf--h3">Customize The Way You&nbsp;Want</h2>
<p class="graf graf--p">Initially, a portal is generated with default settings, but there are two types of options to let you customize almost everything the way you want. The first type is about changing the design and appearance of the portal, while the second type deals with changing the code-generation settings using an advanced API editor.</p>

<h2 class="graf graf--h3">That&#8217;s It</h2>
<p class="graf graf--p">Please give the <a class="markup--anchor markup--p-anchor" href="https://www.apimatic.io/developer-experience-portal/" target="_blank" rel="noopener" data-href="https://devapi.dream.press/developer-experience-portal">Developer Experience Portal</a> a try, and let’s know about your experience. We’re all ears for your valuable feedback and suggestions.</p>

<figure class="graf graf--figure graf--iframe graf--layoutOutsetCenter">
<div class="aspectRatioPlaceholder is-locked">
<div class="aspectRatioPlaceholder-fill"></div>
<div class="iframeContainer"></div>
</div></figure>
</div>
</div>
</div>
</div>						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/developer-experience-beyond-api-docs/">Developer Experience Beyond API Docs</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/developer-experience-beyond-api-docs/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Designing UX for a Developer Product</title>
		<link>/blog/designing-ux-for-a-developer-product/</link>
					<comments>/blog/designing-ux-for-a-developer-product/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Tue, 27 Dec 2016 11:02:52 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Apimatic Features]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[User Interface]]></category>
		<category><![CDATA[UX]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=482</guid>

					<description><![CDATA[<p>“UX should be transparent and not opaque”. Before crafting the user flows of any product certain goals are defined. User goals may include exporting file in a specific format, posting content over web, watching a video on a certain platform etc. There can be multiple goals for a user in a single product too. In [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/designing-ux-for-a-developer-product/">Designing UX for a Developer Product</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="482" class="elementor elementor-482" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-1ceadb05 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="1ceadb05" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-7a27a6b6" data-id="7a27a6b6" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-1cce382c elementor-widget elementor-widget-text-editor" data-id="1cce382c" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-483 aligncenter" src="/wp-content/uploads/2021/12/1_m9ahC-CV6bRC16rpemjZUg-1024x394.jpg" alt="Designing UX for a Developer Product " width="1024" height="394"></p>
</figure>
<!-- /wp:image -->

<!-- wp:quote -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<blockquote class="wp-block-quote">
<p>“UX should be transparent and not opaque”.</p>
</blockquote>
<p id="8708" class="">Before crafting the user flows of any product certain goals are defined. User goals may include exporting file in a specific format, posting content over web, watching a video on a certain platform etc. There can be multiple goals for a user in a single product too. In our case user could achieve multiple goals. When it comes to a complex data driven software product one has to make sure the user journey is flawless and fluent.</p>
<p id="565c" class="">Talking of transparent UX and User Goals. User interface should never come in the way of user and its objective.</p>
<p id="abe3" class="">Let’s talk about the <a href="https://www.apimatic.io/">product</a>&nbsp;I worked on recently.</p>
<blockquote class="wp-block-quote">
<p>Developer specific product can have a lot of complex user goals which could result in even more entangled user flows.</p>
</blockquote>
<p id="249b" class="">To gather requirements one needs to talk to the product owners and the potential users. In my case, since I worked at the same company and product being developed for the developers I had the future users all around me. All I had to do was like talk to them and understand their needs. This introduces another problem on the way. Dev guys start giving you irrelevant input and start taking interest in the design itself, which can have fatal results.</p>
<p id="83e8">Once the requirements were gathered, wire-framing took place. Personally I recommend paper pencil as the best wire-framing tools of all time. The freedom and flow that you get using paper as a medium is out of this world.</p>
</div>
</div>
</div>
</div>
<!-- /wp:quote -->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:quote /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<div class="wp-block-image">
<figure class="aligncenter size-large">
<p class="mod-reset"><img class="wp-image-484 aligncenter" src="/wp-content/uploads/2021/12/1_a5chj6g78lltydxaHNiM2Q.jpg" alt=""></p>
<figcaption>Low fidelity to High fidelity mockup</figcaption>
</figure>
</div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p class="">Converting those rough ideas into proper design is the part where you need to be very careful.&nbsp;<strong>Best practices include creation of the design conventions and defining some rules and boundaries</strong>. From border width to color codes every thing should be defined to sustain throughout the product since consistency is the key.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:columns -->
<div class="wp-block-columns"><!-- wp:column -->
<div class="wp-block-column"><!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-488 aligncenter" src="/wp-content/uploads/2021/12/1_x1LtG0sOnWfjn07DUVvRtg-3.jpg" alt=""></p>
<figcaption>Style Guideline</figcaption>
</figure>
<!-- /wp:image --></div>
<!-- /wp:column -->

<!-- wp:column -->
<div class="wp-block-column"><!-- wp:paragraph -->
<p id="b384" class="">Defining the design guidelines for the whole product makes it lot easier to curate new pages without compromising the consistency. Design guidelines are build around the product branding constraints. In some cases this style guideline helps build the product’s visual identity.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p id="779b" class="">On another level if we come to think of it, design guidelines basically bridge the gap between the designer and the front-end developer. The developer doesn’t have to bother design team for color codes and stuff.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote">
<p>“Brave designers design for zero data”</p>
</blockquote>
<!-- /wp:quote --></div>
<!-- /wp:column --></div>
<!-- /wp:columns -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="738b" class="">Although it is my own quotation I still strongly appreciate it.&nbsp;<strong>Call me self-obsessed</strong>. Yes, you heard me right. Every designer is self obsessed which is a good thing I believe as far as confidence is concerned. Although in case of User Experience Design this self obsession can be fatal for the product. For example designers while designing the experiences tend to come up with the best looking mock-ups in order to be praised by the Project Owner or to just get more appreciation over platforms like&nbsp;<strong>dribbble&nbsp;</strong>and&nbsp;<strong>behance</strong>. In this race the main purpose of design gets lost.</p>
<blockquote class="wp-block-quote">
<p>“Design is the process of solving problems and not only about the visual appeal”</p>
</blockquote>
<p id="a011" class="">I mentioned “design for zero data” before. It is pretty clear that the product itself without any data won’t be as flashy as the mock-ups appeared which will clearly disappoint the product owners and other people around. Design with zero data is hard to swallow but has way better value. Starting from the zero data means troubleshooting a lot of UX issues that would arise later.</p>
<blockquote class="wp-block-quote">
<p>“Users are the tourists, UI should guide them”</p>
</blockquote>
<p id="f5c0" class="">In our product we made sure that we guide user at every step. At the same time we made sure that the user doesn’t get annoyed. Using the minimal approach we used notification stripes instead of popups. Popups are annoying and every UX designer should avoid using them.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:quote /-->

<!-- wp:paragraph /-->

<!-- wp:quote /-->

<!-- wp:paragraph /-->

<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="wp-image-489 aligncenter" src="/wp-content/uploads/2021/12/1_bLAdy8ZZHqpnKX1fgSsvjA.jpg" alt=""></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="0517" class="">Similarly colors must depict the results. One bad choice of color can mislead the user and can result in user frustration. Similarly conversion rate is directly linked to the CTA. CTA must be different from rest of the design and should be the first thing user should be looking at.</p>
<p class="">Talking to the real world users is the way to curate experiences. Even a bad feedback is blessing.</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:quote /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/designing-ux-for-a-developer-product/">Designing UX for a Developer Product</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/designing-ux-for-a-developer-product/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>API Blueprint Extension for Code Generation Settings</title>
		<link>/blog/api-blueprint-extension-for-code-generation-settings/</link>
					<comments>/blog/api-blueprint-extension-for-code-generation-settings/#respond</comments>
		
		<dc:creator><![CDATA[APIMatic]]></dc:creator>
		<pubDate>Sat, 07 Nov 2015 11:02:52 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Api Blueprint]]></category>
		<category><![CDATA[Apimatic Features]]></category>
		<category><![CDATA[Code Generation]]></category>
		<category><![CDATA[Developer Experience]]></category>
		<category><![CDATA[Specification Extensions]]></category>
		<guid isPermaLink="false">https://devapi.dream.press/?p=459</guid>

					<description><![CDATA[<p>We have just launched Code Generation Extensions for API Blueprint. These extensions allow customizing the behaviour of APIMatic’s Code Generation Engine. By specifying additional metadata in your API Blueprint description, you can now control the naming conventions, configuration stores and have your custom code branding. We refer to these as Code Generation Settings. Previously, you [&#8230;]</p>
<p>The post <a rel="nofollow" href="/blog/api-blueprint-extension-for-code-generation-settings/">API Blueprint Extension for Code Generation Settings</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></description>
										<content:encoded><![CDATA[		<div data-elementor-type="wp-post" data-elementor-id="459" class="elementor elementor-459" data-elementor-settings="[]">
							<div class="elementor-section-wrap">
							<section class="elementor-section elementor-top-section elementor-element elementor-element-6f325ab4 elementor-section-boxed elementor-section-height-default elementor-section-height-default" data-id="6f325ab4" data-element_type="section">
						<div class="elementor-container elementor-column-gap-default">
					<div class="elementor-column elementor-col-100 elementor-top-column elementor-element elementor-element-27fe5f49" data-id="27fe5f49" data-element_type="column">
			<div class="elementor-widget-wrap elementor-element-populated">
								<div class="elementor-element elementor-element-24f5460b elementor-widget elementor-widget-text-editor" data-id="24f5460b" data-element_type="widget" data-widget_type="text-editor.default">
				<div class="elementor-widget-container">
							<!-- wp:image -->
<figure class="wp-block-image size-large">
<p class="mod-reset"><img class="alignnone wp-image-461" src="/wp-content/uploads/2021/12/1_dg0IM1sORJDG0wZtGFN9Bw-1.png" alt="API Blueprint Extension for Code Generation Settings" width="720" height="167" /></p>
</figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="25a7" class="">We have just launched Code Generation Extensions for API Blueprint. These extensions allow customizing the behaviour of APIMatic’s Code Generation Engine. By specifying additional metadata in your API Blueprint description, you can now control the naming conventions, configuration stores and have your custom code branding. We refer to these as Code Generation Settings. Previously, you had to import your API Blueprint into APIMATIC format and use our Editor UI to specify these settings. Some while ago we made a similar extension available for Swagger 2.0 (<a href="https://www.apimatic.io/blog/post/swagger-2-0-extension-for-code-generation-settings">read more here</a>). But if your API description uses API Blueprint, you can leverage this as well.</p>
<h2 id="dfd4">API Blueprint CodeGen Settings</h2>
<p id="6551" class="">We extended the <a href="https://docs.apimatic.io/specification-extensions/blueprint-extensions">API Blueprint metadata</a> attribute to specify additional properties. See the following example below:</p>
</div>
</div>
</div>
</div>
<!-- /wp:paragraph -->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:preformatted -->
<pre class="wp-block-preformatted"><code>FORMAT: 1A

HOST: &lt;a href=&quot;http://api.datumbox.com/&quot;&gt;http://api.datumbox.com/&lt;/a&gt;GENERATEASYNCCODE: TRUE
USEMETHODPREFIX: TRUE
USEMODELPOSTFIX: TRUE
USECONTROLLERPOSTFIX: TRUE
USEENUMPOSTFIX: TRUE
USECONSTRUCTORSFORCONFIG: TRUE
IOSUSEAPPINFOPLIST: TRUE
IOSGENERATECOREDATA: FALSE
ANDROIDUSEAPPMANIFEST: TRUE
COLLECTPARAMETERS: FALSE
CSHARPDEFAULTNAMESPACE: ACME.CORP.API
JAVADEFAULTNAMESPACE: com.acme.corp.api
APPENDCONTENTHEADERS: TRUE
BRANDLABEL: ACME CORP.
USERAGENT: APIMATIC 2.0
ENABLEADDITIONALMODELPROPERTIES: FALSE</code></pre>
<div class="boldgrid-section">
<div class="container">
<div class="row">
<div class="col-md-12 col-xs-12 col-sm-12">
<p id="e31c" class="">The purpose of these parameters is explained below:</p>
<h2 id="f7da">GENERATEASYNCCODE</h2>
<p id="e8ac">When true, the CodeGen engine generates asynchronous C# and Java code.</p>
<h2 id="fc1c">USEMETHODPREFIX</h2>
<p id="8f4b">When true, HTTP verbs are used as prefix for generated controller methods.</p>
<h2 id="47c6">USEMODELPOSTFIX</h2>
<p id="972b" class="">When true, a postfix “Model” is appended to all classes generated from schemas.</p>
<h2 id="2514">USECONTROLLERPOSTFIX</h2>
<p id="3327">When true, a postfix “Controller” is appended to all controllers generated from path groups.</p>
<h2 id="be10">USEENUMPOSTFIX</h2>
<p id="2aee">When true, a postfix “Enum” is appended to all enumerations lifted from “allowedValues”.</p>
<h2 id="1ed3" class="">USECONSTRUCTORSFORCONFIG</h2>
<p id="8bd5">When true, configuration values e.g., authentication credentials, are accepted as controller constructor parameters. Otherwise, these values generate variables in a Configuration class.</p>
<h2 id="38d5">IOSUSEAPPINFOPLIST</h2>
<p id="b120" class="">When true, configuration values e.g., authentication credentials, are expected in app-info.plist file for the iOS SDK. When set, this setting ignores useConstructorsForConfig flag.</p>
<h2 id="712b">IOSGENERATECOREDATA</h2>
<p id="2349">When true, iOS CoreData schema and classes are generated.</p>
<h2 id="f3a7">ANDROIDUSEAPPMANIFEST</h2>
<p id="34b4" class="">When true, configuration values e.g., authentication credentials, are expected in AndroidManifest.xml file for the Android SDK. When set, this setting ignores <code>useConstructorsForConfig</code> flag.</p>
<h2 id="0a87">COLLECTPARAMETERS</h2>
<p id="7a93" class="">When true, operation parameters are expected to passed as a collection. For example in PHP, the generated method expects a Map containing parameters as Key-Value pairs. This is currently implemented for PHP, Python, GO, and Objective-C. When set, this is applied globally on all endpoints/operations. If you wish to use this option on specific endpoints, use the <code>x-operation-settings:collectParameters</code> instead.</p>
<h2 id="5b17">CSHARPDEFAULTNAMESPACE</h2>
<p id="e17b">A valid C# namespace value to be used as the default namespace. Leave empty or null to automatically generate.</p>
<h2 id="9249">JAVADEFAULTNAMESPACE</h2>
<p id="1c84">A valid Java package name to be used as the base package name. Leave empty or null to automatically generate. This value is applied for both Java and Android code generation templates.</p>
<h2 id="42b1">APPENDCONTENTHEADERS</h2>
<p id="48e5">When true, code generation engine automatically detects request and response schema and appends content headers e.g., “<code>accept: application/json</code>” and “<code>content-type: application/json</code>” headers for JSON serialization mode.</p>
<h2 id="dd20">BRANDLABEL</h2>
<p id="498b">A string value to brand the generated files. For example: “Acme Corp.”</p>
<h2 id="9bc8">USERAGENT</h2>
<p id="854b">A string value to use as user-agent in the API calls. This is useful for analytics and tracking purposes. For example: “SDK V1.1”</p>
<h2 id="488d">ENABLEADDITIONALMODELPROPERTIES</h2>
<p id="6f8f" class="">When true, additional or unknown properties in the response JSON are collected into a dictionary.</p>
<p id="f463">Please direct any queries on this aspect to our <a href="https://apimatic.zendesk.com/">support portal</a>.</p>
</div>
</div>
</div>
</div>
<!-- /wp:preformatted -->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:heading /-->

<!-- wp:paragraph /-->

<!-- wp:paragraph /-->						</div>
				</div>
					</div>
		</div>
							</div>
		</section>
						</div>
					</div>
		<p>The post <a rel="nofollow" href="/blog/api-blueprint-extension-for-code-generation-settings/">API Blueprint Extension for Code Generation Settings</a> appeared first on <a rel="nofollow" href="/">APIMatic</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>/blog/api-blueprint-extension-for-code-generation-settings/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
